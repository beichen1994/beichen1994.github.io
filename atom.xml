<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王玉奇</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://beichen1994.github.io/"/>
  <updated>2020-04-27T09:33:19.625Z</updated>
  <id>http://beichen1994.github.io/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的git笔记</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84git%E7%AC%94%E8%AE%B0/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84git%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-27T06:55:44.000Z</published>
    <updated>2020-04-27T09:33:19.625Z</updated>
    
    <content type="html"><![CDATA[<p>一开始我对git还是比较抵触，学习成本较高，因为不懂所以不知其便利。但终究还是没有忍住git对我的诱惑，便尝试了起来。我是按照<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰的git课程</a>进行学习的。目前我也只能算是入门，还远没有达到精通的地步。现将git的学习笔记进行一下整理。</p><a id="more"></a><p><img src="https://s1.ax1x.com/2020/04/27/Jf31Gq.jpg" alt="Jf31Gq.jpg"></p><ul><li>git初始配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;beichen1994&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;1768229565@qq.com&quot;</span><br><span class="line"></span><br><span class="line">git config --list</span><br><span class="line"></span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><ul><li>创建git仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir learngit</span><br><span class="line">cd learngit</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><ul><li>将修改添加到暂存区，提交到Master分支</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">编写 file1.txt file2.txt file3.txt</span><br><span class="line"></span><br><span class="line">git add file1.txt</span><br><span class="line">git add file2.txt file3.txt</span><br><span class="line">git commit -m &quot;update&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">继续修改 file1.txt</span><br><span class="line">git status 查看仓库状态 </span><br><span class="line">git diff file1.txt 查看修改内容</span><br><span class="line"></span><br><span class="line">git add file1.txt</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">git status 查看仓库状态</span><br></pre></td></tr></table></figure><ul><li>版本回退</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">继续修改file1.txt</span><br><span class="line">git add file1.txt</span><br><span class="line">git commit -m &quot;udpate&quot;</span><br><span class="line">git log</span><br><span class="line">查看提交过程，目前file1.txt一共进行了三次提交，也就是有三个版本</span><br><span class="line"></span><br><span class="line">git reset --hard head^ </span><br><span class="line">将file1.txt更改为第二次提交，顺便将工作区的文件进行了更新</span><br><span class="line"></span><br><span class="line">git log</span><br><span class="line">查看提交过程，目前只显示两次提交</span><br><span class="line"></span><br><span class="line">git reflog </span><br><span class="line">查看所有提交历史，便于使用版本号进行reset</span><br><span class="line"></span><br><span class="line">git reset --hard 1094 </span><br><span class="line">将file1.txt更改为1094号提交，顺便将工作区的文件进行了更新</span><br></pre></td></tr></table></figure><ul><li>撤销修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD readme.txt</span><br><span class="line">如果file1.txt已经添加到暂存区，现在撤销暂存区的修改</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- file1.txt</span><br><span class="line">如果文件修改出问题，用版本库，即暂存区或者分支上的版本替换工作区的版本</span><br><span class="line">(撤销file1.txt在工作区的修改)</span><br></pre></td></tr></table></figure><ul><li>文件删除</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先将工作区的file2.txt删除</span><br><span class="line">git rm file2.txt 将版本库中的文件删除</span><br><span class="line">git commit -m &quot;udpate&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- file2.txt</span><br><span class="line">如果文件删错了，用版本库中的文件替换工作区</span><br></pre></td></tr></table></figure><p>关联远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:beichen1994/Repo.git</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line">git clone git@github.com:beichen1994/gitskills.git</span><br><span class="line">克隆到本地库</span><br></pre></td></tr></table></figure><p>使用git提交的时候出现The file will have its original line endings in your working directory.错误</p><p>1 git rm -r -f --cached ./ (删除缓存)<br>2 git add . （添加该目录下所有文件）<br>3 git push -u origin master （这时候提交就没问题了）</p><ul><li>分支管理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">git branch dev</span><br><span class="line">创建dev分支</span><br><span class="line"></span><br><span class="line">git checkout dev</span><br><span class="line">然后切换到dev分支</span><br><span class="line"></span><br><span class="line">git branch</span><br><span class="line">查看所有分支</span><br><span class="line"></span><br><span class="line">修改file1.txt</span><br><span class="line"> </span><br><span class="line">git add file1.txt</span><br><span class="line"></span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">切换回master分支，发现file1.txt中的修改不见了</span><br><span class="line"></span><br><span class="line">git merge dev</span><br><span class="line">合并dev分支到当前分支 (master)</span><br><span class="line"></span><br><span class="line">git branch -d dev</span><br><span class="line">删除dev分支</span><br></pre></td></tr></table></figure><ul><li>解决冲突</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">git branch feature1</span><br><span class="line"></span><br><span class="line">git checkout feature1</span><br><span class="line"></span><br><span class="line">继续修改file1.txt</span><br><span class="line"></span><br><span class="line">git add file1.txt</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">在feature1分支上提交修改</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git checkout master</span><br><span class="line">切换到master分支</span><br><span class="line"></span><br><span class="line">继续修改file1.txt</span><br><span class="line"></span><br><span class="line">git add file1.txt</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">在master分支上提交</span><br><span class="line"></span><br><span class="line">git merge feature1</span><br><span class="line">两个分支上的file1.txt出现冲突</span><br><span class="line"></span><br><span class="line">将master分支上的file1.txt文件修改一下</span><br><span class="line"></span><br><span class="line">git add file1.txt</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">在master分支上继续提交</span><br><span class="line"></span><br><span class="line">git branch -d feature1</span><br><span class="line">删除feature1分支</span><br></pre></td></tr></table></figure><p>整个过程如下所示<br><img src="https://s1.ax1x.com/2020/04/27/JfyUgS.png" alt="JfyUgS.png"><br><img src="https://s1.ax1x.com/2020/04/27/JfyN38.png" alt="JfyN38.png"><br><img src="https://s1.ax1x.com/2020/04/27/Jfyt9f.png" alt="Jfyt9f.png"><br><img src="https://s1.ax1x.com/2020/04/27/JfylBd.png" alt="JfylBd.png"><br><img src="https://s1.ax1x.com/2020/04/27/Jfy1HA.png" alt="Jfy1HA.png"><br><img src="https://s1.ax1x.com/2020/04/27/Jfy8AI.png" alt="Jfy8AI.png"><br><img src="https://s1.ax1x.com/2020/04/27/JfyGNt.png" alt="JfyGNt.png"><br><img src="https://s1.ax1x.com/2020/04/27/JfyJ4P.png" alt="JfyJ4P.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一开始我对git还是比较抵触，学习成本较高，因为不懂所以不知其便利。但终究还是没有忍住git对我的诱惑，便尝试了起来。我是按照&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/896043488029600&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;廖雪峰的git课程&lt;/a&gt;进行学习的。目前我也只能算是入门，还远没有达到精通的地步。现将git的学习笔记进行一下整理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="git" scheme="http://beichen1994.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>我的正则表达式总结</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-27T06:37:22.000Z</published>
    <updated>2020-04-27T06:54:48.364Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式用途非常广泛，唯有熟才能生巧。我只是偶尔会用到，所以在这里学习并记录一下。以备翻阅。</p><hr><ul><li>主料</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">匹配所有出现的单个字符（断行不行）</span><br><span class="line"></span><br><span class="line">..</span><br><span class="line">匹配所有出现的双字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">匹配所有出现的三字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">匹配所有出现的四字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\w</span><br><span class="line">匹配所有出现的0-9、大小写字母、下划线</span><br><span class="line"></span><br><span class="line">\W</span><br><span class="line">倒置\w</span><br><span class="line"></span><br><span class="line">\d</span><br><span class="line">匹配所有出现的单个数字</span><br><span class="line"></span><br><span class="line">\d\.\d</span><br><span class="line">可以匹配3.1</span><br><span class="line"></span><br><span class="line">\D</span><br><span class="line">倒置\d</span><br><span class="line"></span><br><span class="line">\s</span><br><span class="line">匹配所有出现的空格、tab、断行</span><br><span class="line"></span><br><span class="line">\S</span><br><span class="line">倒置\s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[选择范围]</span><br><span class="line">匹配字符串中所有出现的该范围的任意字符组合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[abc]</span><br><span class="line">匹配字符串所有出现的abc、所有出现的a、所有出现的b、所有出现的c、所有出现的ab、所有出现的bc、所有出现的ac、</span><br><span class="line"></span><br><span class="line">[a-z]</span><br><span class="line">匹配字符串中所有出现的a-z的所有组合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[A-Z]</span><br><span class="line">匹配字符串中所有出现的A-Z的所有组合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[0-9]</span><br><span class="line">匹配字符串中所有出现的0-9的所有组合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\b</span><br><span class="line">词的边界</span><br></pre></td></tr></table></figure><a id="more"></a><hr><ul><li>配料</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[范围]+</span><br><span class="line">范围内的任意字符组合重复一次或多次</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[yY][oO]+</span><br><span class="line">比如可以匹配yo、yoooo、Yo、YoOo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[范围]*</span><br><span class="line">范围内的任意字符组合可选(重复0次或多次)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[yY][oO]+[!~\.]*</span><br><span class="line">可以匹配yo、yooo、Yo、yo！、yo！！、yo</span><br><span class="line">[范围]？</span><br><span class="line">范围内的任意字符组合可选(重复0次或1次)</span><br><span class="line"></span><br><span class="line">[yY][oO]+p?[!~.]*</span><br><span class="line">可以匹配 yop!!、yooop、Yoop、yo、yooooo、yooo</span><br></pre></td></tr></table></figure><p>[范围]{a,b}<br>范围内的任意字符组合重复a-b次</p><p>yo{2,}</p><p>可以匹配yoo、yooo、yoooo（o至少出现2次）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">***</span><br></pre></td></tr></table></figure><p>yo{0,1} 等同于 yo？</p><p>yo{0,} 等同于 yo*</p><p>yo{1,} 等同于 yo+</p><p>.+飞飞, .+追追<br>(.+)飞飞, (.+)追追<br>李全单飞飞，王花花追追<br>匹配到两组，一组是李全单，一组是王花花</p><pre class="highlight"><code class></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式用途非常广泛，唯有熟才能生巧。我只是偶尔会用到，所以在这里学习并记录一下。以备翻阅。&lt;/p&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;主料&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的单个字符（断行不行）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的双字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的三字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的四字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的0-9、大小写字母、下划线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\W&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;倒置\w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的单个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\d\.\d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以匹配3.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;倒置\d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配所有出现的空格、tab、断行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\S&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;倒置\s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[选择范围]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配字符串中所有出现的该范围的任意字符组合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[abc]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配字符串所有出现的abc、所有出现的a、所有出现的b、所有出现的c、所有出现的ab、所有出现的bc、所有出现的ac、&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[a-z]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配字符串中所有出现的a-z的所有组合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[A-Z]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配字符串中所有出现的A-Z的所有组合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0-9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;匹配字符串中所有出现的0-9的所有组合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;词的边界&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="正则表达式" scheme="http://beichen1994.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>我的Python学习笔记</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-27T02:46:01.000Z</published>
    <updated>2020-04-27T03:05:37.827Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="turtle画个图"><a class="markdownIt-Anchor" href="#turtle画个图"></a> turtle画个图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r=25</span><br><span class="line">area=3.1415926*r*r</span><br><span class="line">print(area)`</span><br><span class="line">print(&quot;&#123;:.2f&#125;F&quot;.format(area))</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import turtle</span><br><span class="line">turtle.pensize(20)</span><br><span class="line">turtle.circle(10)</span><br><span class="line">turtle.circle(40)</span><br><span class="line">turtle.circle(80)</span><br><span class="line">turtle.circle(160)</span><br></pre></td></tr></table></figure><h2 id="多行注释"><a class="markdownIt-Anchor" href="#多行注释"></a> 多行注释</h2><p>“”&quot;<br>“”&quot;</p><h2 id="单行注释"><a class="markdownIt-Anchor" href="#单行注释"></a> 单行注释</h2><p>#</p><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量：</h2><p>字母 数字 下划线 汉字（数字不能开头）</p><h2 id="关键字"><a class="markdownIt-Anchor" href="#关键字"></a> 关键字：</h2><p>33个</p><h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2><h3 id="整数类型"><a class="markdownIt-Anchor" href="#整数类型"></a> 整数类型</h3><p>100111101</p><p>范围无限大</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pow(x,y)</span><br></pre></td></tr></table></figure><h3 id="浮点数类型"><a class="markdownIt-Anchor" href="#浮点数类型"></a> 浮点数类型</h3><p>3.1415</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0.1+0.3--&gt;0.4</span><br><span class="line">0.1+0.2--&gt;0.3000000000000004存在不确定尾数</span><br><span class="line"></span><br><span class="line">round(0.1+0.2,1)--&gt;0.3</span><br><span class="line"></span><br><span class="line">&lt;a&gt;e&lt;b&gt;  a*10^b</span><br><span class="line">9.6e5--&gt;960000.0</span><br></pre></td></tr></table></figure><h3 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;请输入带有符号的温度值&quot;</span><br><span class="line">&apos;C&apos;</span><br><span class="line"> &apos;&apos;&apos; Python       语言&apos;&apos;&apos; </span><br><span class="line">单引号中可以表示双引号</span><br><span class="line">双引号中可以表示单引号</span><br></pre></td></tr></table></figure><h3 id="切片"><a class="markdownIt-Anchor" href="#切片"></a> 切片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">... -5 -4 -3 -2 -1  </span><br><span class="line">    0 1 2 3 4 5 6...</span><br><span class="line">  [start:end:step] 从start 提取到end - 1，每step 个字符提取一个</span><br><span class="line">  [start:] 从start 提取到结尾</span><br><span class="line">  [:end] 从开头提取到end - 1</span><br></pre></td></tr></table></figure><h3 id="操作函数"><a class="markdownIt-Anchor" href="#操作函数"></a> 操作函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">字符串操作函数</span><br><span class="line">x+y 连接x,y</span><br><span class="line">n*x  复制n次x</span><br><span class="line">x in s  x是否是s的子串</span><br></pre></td></tr></table></figure><h3 id="字符串处理函数"><a class="markdownIt-Anchor" href="#字符串处理函数"></a> 字符串处理函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">len(x)</span><br><span class="line">str(x)  str(1.23) --&gt;&quot;1.23&quot;</span><br><span class="line">chr(u)    Unicode-&gt;单字符</span><br><span class="line">ord(x)    单字符 -&gt;Unicode</span><br></pre></td></tr></table></figure><h3 id="字符串处理方法"><a class="markdownIt-Anchor" href="#字符串处理方法"></a> 字符串处理方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str.lower() str.upper()</span><br><span class="line">str.split()    &quot;A B C&quot;.split(&quot;,&quot;) --&gt; [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;]</span><br><span class="line">str.count(sub)  &quot;a apple a day&quot;.count(&quot;a&quot;)--&gt;4</span><br><span class="line">str.replace(old,new)</span><br><span class="line">str.center(width,&quot;fillchar&quot;)</span><br></pre></td></tr></table></figure><h3 id="元组"><a class="markdownIt-Anchor" href="#元组"></a> 元组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用()或省或tuple()</span><br><span class="line">一旦创建不能修改</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creature = &quot;cat&quot;,&quot;dog&quot;,&quot;monky&quot;,&quot;tiger&quot;</span><br><span class="line">print(creature)</span><br><span class="line">color =(0x001100,&quot;blue&quot;,creature)</span><br><span class="line">print(color)</span><br><span class="line">print(creature[::-1])</span><br></pre></td></tr></table></figure><h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用[]或list()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#数据保护</span><br><span class="line"></span><br><span class="line">a=[&quot;cat&quot;,&quot;dog&quot;,&quot;tiger&quot;,1024]</span><br><span class="line">b=tuple(a)</span><br><span class="line">b</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">函数</span><br><span class="line">ls.append(x)</span><br><span class="line">ls.clear()</span><br><span class="line">ls.copy</span><br><span class="line">ls.insert(i,x)</span><br><span class="line">ls.pop(i)</span><br><span class="line">ls.remove(x)</span><br><span class="line">ls.reverse()</span><br></pre></td></tr></table></figure><h6 id="字典"><a class="markdownIt-Anchor" href="#字典"></a> 字典</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;键1:值1,键2:值2,键3:值3........&#125;</span><br><span class="line">dict()</span><br><span class="line">d.keys()</span><br><span class="line">d.values()</span><br><span class="line">d.items()  返回所有键值对信息</span><br><span class="line"></span><br><span class="line">d.get(k,default)</span><br><span class="line">d.pop(k,default)</span><br><span class="line">d.popitem()</span><br><span class="line">d.clear()</span><br><span class="line">len(d)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d =&#123;&quot;中国&quot;:&quot;北京&quot;,&quot;美国&quot;:&quot;华盛顿&quot;,&quot;法国&quot;:&quot;巴黎&quot;&#125;</span><br><span class="line">print(d)</span><br><span class="line">print(d.keys())</span><br><span class="line">print(d.values())</span><br></pre></td></tr></table></figure><h3 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A=&#123;&quot;python&quot;,123,(&apos;python&apos;,123)&#125;    #无序唯一</span><br><span class="line">print(A)</span><br><span class="line"></span><br><span class="line">B = set(&quot;pypy123&quot;)        #无序唯一</span><br><span class="line">print(B)</span><br></pre></td></tr></table></figure><h3 id="集合运算"><a class="markdownIt-Anchor" href="#集合运算"></a> 集合运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">S|T  </span><br><span class="line">S&amp;T  </span><br><span class="line">S-T  </span><br><span class="line">S^T(补)  </span><br><span class="line">S&lt;=T S&lt;T(子集)</span><br><span class="line"></span><br><span class="line">S|=T </span><br><span class="line">S-=T </span><br><span class="line">S&amp;=T </span><br><span class="line">S^=T(更新集合S)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">S = &#123;&quot;p&quot;,&quot;y&quot;,123&#125;</span><br><span class="line">T = set(&quot;pypy123&quot;) </span><br><span class="line"></span><br><span class="line">print(S|T)</span><br><span class="line">print(S&amp;T)</span><br><span class="line">print(S^T)</span><br><span class="line">print(T-S)</span><br><span class="line">print(S-T)</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line">### 集合函数</span><br></pre></td></tr></table></figure><p>S.add(x)<br>S.discard(x)  移除，若不在，不报错<br>S.remove(x)    移除，若不在，报错<br>S.clear()<br>S.pop()           随机返回一个元素<br>S.copy()<br>len(S)<br>x in S<br>x not in S<br>set(x)        将x转为集合类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 集合去重</span><br></pre></td></tr></table></figure><p>ls = [“p”,“p”,“y”,“y”,123]<br>s = set(ls)<br>print(s)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 运算符</span><br><span class="line">### 算术运算符</span><br><span class="line"></span><br><span class="line">    x/y  除</span><br><span class="line">    x//y 整数除</span><br><span class="line">    x%y </span><br><span class="line">    x**y  x的y次方</span><br><span class="line">    xop=y x+=y x-=y x*=y x/=y</span><br><span class="line">    </span><br><span class="line">### 算数运算函数</span><br><span class="line"></span><br><span class="line">    abs(x) 绝对值</span><br><span class="line">    divmod(x,y)  (x//y,x%y)</span><br><span class="line">    pow(x,y)    x**y</span><br><span class="line">    pow(x,y,z)  (x**y)%z</span><br><span class="line">    round(x,d)</span><br><span class="line">    max(x1,x2,x3,x4)</span><br><span class="line">    min(x1,x2,x3,x4)</span><br><span class="line">    int(x) </span><br><span class="line">    float(x)     float(12) --&gt;12.0  float(&quot;1.23&quot;) --&gt; 1.23</span><br><span class="line">    complex(x)   complex(4) --&gt; 4+0j</span><br><span class="line">    </span><br><span class="line">      </span><br><span class="line">###  关系运算符</span><br><span class="line">```    </span><br><span class="line">&lt;</span><br><span class="line">&gt;</span><br><span class="line">== </span><br><span class="line">!=</span><br><span class="line">&gt;=</span><br><span class="line">&lt;=</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and </span><br><span class="line">or </span><br><span class="line">not</span><br></pre></td></tr></table></figure><h2 id="语句"><a class="markdownIt-Anchor" href="#语句"></a> 语句</h2><h3 id="赋值语句"><a class="markdownIt-Anchor" href="#赋值语句"></a> 赋值语句</h3><h3 id="分支语句"><a class="markdownIt-Anchor" href="#分支语句"></a> 分支语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if 条件：</span><br><span class="line">    执行语句</span><br><span class="line">elif 条件：</span><br><span class="line">    执行语句</span><br><span class="line">else:</span><br><span class="line">    执行</span><br><span class="line">    </span><br><span class="line">简写：   &lt;表达式1&gt;if&lt;条件&gt;else&lt;表达式2&gt;</span><br></pre></td></tr></table></figure><h3 id="输入输出"><a class="markdownIt-Anchor" href="#输入输出"></a> 输入输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">变量 = input(&quot;something&quot;)</span><br><span class="line">print(&quot;something&quot;)</span><br><span class="line"> &quot;&#123;1&#125;计算机&#123;0&#125;的CPU占用率为&#123;2&#125;%&quot;.format(&quot;2018-101-10&quot;,&quot;C&quot;,10)</span><br><span class="line"> &#123;序号 ： &lt;填充&gt; &lt;对齐&gt; &lt;宽度&gt; &lt;,&gt; &lt;.精度&gt; &lt;类型&gt;&#125;</span><br><span class="line"> </span><br><span class="line">eval(字符串)</span><br><span class="line">将字符串str当成有效的表达式来求值并返回计算结果</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3><h4 id="for循环"><a class="markdownIt-Anchor" href="#for循环"></a> for循环</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for 变量 in 遍历结构:</span><br><span class="line">        执行语句1</span><br><span class="line">else:                  (一定执行)</span><br><span class="line">    执行语句2</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">for i in range(N):</span><br><span class="line">    执行语句</span><br><span class="line">for i in range(M,N,K):</span><br><span class="line">    执行语句</span><br><span class="line"></span><br><span class="line">for c in &quot;python123&quot;:</span><br><span class="line">    print(c,end=&quot;,&quot;)</span><br><span class="line">    --&gt;p,y,t,h,o,n,1,2,3,</span><br><span class="line"></span><br><span class="line">for item in [123,&quot;PY&quot;,456]:</span><br><span class="line">    print(item,end=&quot;,&quot;)</span><br><span class="line">    ---&gt;123,PY,456</span><br><span class="line"></span><br><span class="line">for line in fi:</span><br><span class="line">    print(line)</span><br><span class="line">    ---&gt;</span><br><span class="line">    优美胜于丑陋</span><br><span class="line">    明了胜于隐晦</span><br><span class="line">    简洁胜于复杂</span><br></pre></td></tr></table></figure><h4 id="while循环"><a class="markdownIt-Anchor" href="#while循环"></a> while循环</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while 条件表达式:</span><br><span class="line">    执行语句1</span><br><span class="line">else:                     (一定执行)</span><br><span class="line">    执行语句2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">while a&gt;0:</span><br><span class="line">    a=a-1</span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">break 跳出循环</span><br><span class="line">continue 跳出本次循环</span><br></pre></td></tr></table></figure><h2 id="time库"><a class="markdownIt-Anchor" href="#time库"></a> time库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"># 时间获取</span><br><span class="line">print(time.gmtime()) #格林威治时间</span><br><span class="line"></span><br><span class="line">#时间格式化</span><br><span class="line">t=time.gmtime()</span><br><span class="line">print(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,t))</span><br><span class="line"></span><br><span class="line">## 程序计时</span><br><span class="line">start=time.perf_counter()</span><br><span class="line">end=time.perf_counter()</span><br><span class="line">print(end-start)</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">#调用一次perf_counter()，从计算机系统里随机选一个时间点A，</span><br><span class="line">计算其距离当前时间点B1有多少秒。</span><br><span class="line">当第二次调用该函数时，默认从第一次调用的时间点A算起，</span><br><span class="line">距离当前时间点B2有多少秒。</span><br><span class="line">两个函数取差，即实现从时间点B1到B2的计时功能。</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">## 睡眠</span><br><span class="line"></span><br><span class="line">def wait():</span><br><span class="line">    time.sleep(3)</span><br><span class="line">wait()</span><br></pre></td></tr></table></figure><h2 id="进度条"><a class="markdownIt-Anchor" href="#进度条"></a> 进度条</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scale = 10</span><br><span class="line">print(&quot;--执行开始--&quot;)</span><br><span class="line">for i in range(scale+1):</span><br><span class="line">    a = &apos;*&apos;*i</span><br><span class="line">    b = &apos;.&apos;*(scale-i)</span><br><span class="line">    c = (i/scale)*100</span><br><span class="line">    print(&quot;&#123;:^3.0f&#125;%[&#123;&#125;-&#123;&#125;]&quot;.format(c,a,b))</span><br><span class="line">    time.sleep(0.1)</span><br><span class="line">print(&quot;--执行结束--&quot;)</span><br></pre></td></tr></table></figure><h2 id="单行动态刷新"><a class="markdownIt-Anchor" href="#单行动态刷新"></a> 单行动态刷新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 默认end=&quot;\n&quot;  光标退回到原来位置</span><br><span class="line">for i in range(101):</span><br><span class="line">    print(&quot;\r&#123;:.3f&#125;%&quot;.format(i),end=&quot;&quot;)   </span><br><span class="line">    time.sleep(0.1)</span><br></pre></td></tr></table></figure><h2 id="进度条-2"><a class="markdownIt-Anchor" href="#进度条-2"></a> 进度条</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.center(width, fillchar)</span><br><span class="line">返回一个在指定的宽度 width中 且居中的字符串，fillchar 为填充的字符，默认为空格</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">scale = 50</span><br><span class="line">print(&quot;执行开始&quot;.center(scale//2,&quot;-&quot;))  # 填充</span><br><span class="line">start = time.perf_counter()</span><br><span class="line">for i in range(scale+1):</span><br><span class="line">    a = &apos;*&apos;*i</span><br><span class="line">    b = &apos;.&apos;*(scale - i)</span><br><span class="line">    c = (i/scale)*100</span><br><span class="line">    dur = time.perf_counter()-start</span><br><span class="line">    print(&quot;\r&#123;:^3.0f&#125;%[&#123;&#125;-&#123;&#125;]&#123;:.2f&#125;s&quot;.format(c,a,b,dur),end=&quot;&quot;) #默认end=&quot;\n&quot;</span><br><span class="line">    time.sleep(0.1)</span><br><span class="line">print(&quot;\n&quot;+&quot;执行结束&quot;.center(scale//2,&apos;-&apos;))</span><br></pre></td></tr></table></figure><h2 id="random库"><a class="markdownIt-Anchor" href="#random库"></a> random库</h2><h3 id="基本随机数函数"><a class="markdownIt-Anchor" href="#基本随机数函数"></a> 基本随机数函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random.seed(10)</span><br><span class="line">random.random()   0.0-1.0之间的随机小数</span><br></pre></td></tr></table></figure><h3 id="扩展随机数函数"><a class="markdownIt-Anchor" href="#扩展随机数函数"></a> 扩展随机数函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">random.randint(a,b)      a-b之间的随机整数</span><br><span class="line">random.randrange(m,n,k)    m-n之间步长为k的随机整数</span><br><span class="line">random.getrandbits(k)         kbit长的随机整数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">random.uniform(a,b)            a-b之间的随机小数</span><br><span class="line">random.choice(seq)             从seq中随机选择一个  </span><br><span class="line">random.shuffle(seq)               将seq打乱</span><br></pre></td></tr></table></figure><h2 id="异常处理"><a class="markdownIt-Anchor" href="#异常处理"></a> 异常处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">try :</span><br><span class="line">    语句1 </span><br><span class="line">except:         (出错执行)</span><br><span class="line">    语句2</span><br><span class="line">else:            (正常执行)</span><br><span class="line">    语句3</span><br><span class="line">finally:          (一定会执行)</span><br><span class="line">    语句4</span><br></pre></td></tr></table></figure><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数名(参数):</span><br><span class="line">    函数体</span><br><span class="line">    return 返回值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def getNum():      #获取用户不定长度的输入</span><br><span class="line">    nums=[]</span><br><span class="line">    iNumStr = input(&quot;请输入数字(回车退出)&quot;)</span><br><span class="line">    while iNumStr != &quot;&quot;:</span><br><span class="line">        nums.append(eval(iNumStr))</span><br><span class="line">        iNumStr = input(&quot;请输入数字(回车退出)&quot;)</span><br><span class="line">    return nums</span><br><span class="line"></span><br><span class="line">def mean(numbers):    #计算平均值</span><br><span class="line">    s=0.0</span><br><span class="line">    for num in numbers:</span><br><span class="line">        s+=num</span><br><span class="line">    return s/len(numbers)</span><br><span class="line"></span><br><span class="line">def dev(numbers,mean):   #计算方差</span><br><span class="line">    sdev = 0.0</span><br><span class="line">    for num in numbers:</span><br><span class="line">        sdev = sdev+(num-mean)**2</span><br><span class="line">    return pow(sdev/(len(numbers)-1),0.5)</span><br><span class="line"></span><br><span class="line">def median(numbers):     #计算中位数</span><br><span class="line">    sorted(numbers)</span><br><span class="line">    size = len(numbers)</span><br><span class="line">    if size %2 ==0:</span><br><span class="line">        med = (numbers[size//2-1]+numbers[size//2])/2</span><br><span class="line">    else:</span><br><span class="line">        med = numbers[size//2]</span><br><span class="line">    return med</span><br><span class="line"></span><br><span class="line">n = getNum()</span><br><span class="line">m = mean(n)</span><br><span class="line">print(&quot;平均值:&#123;&#125;,方差:&#123;:.2&#125;,中位数:&#123;&#125;&quot;.format(m,dev(n,m)),median(n))</span><br></pre></td></tr></table></figure><h2 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量名 = open(文件名,打开方式)</span><br><span class="line">变量名.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rt rb   以读模式打开，指针回到开头</span><br><span class="line">r+      以读写模式打开，指针回到开头，文件不存在报错</span><br><span class="line">wt wb   以写模式打开，指针回到开头</span><br><span class="line">w+       以读写模式打开，指针回到开头，文件不存在新建</span><br><span class="line">a       以写模式打开，指针在结尾，文件不存在新建</span><br><span class="line">a+     以读写模式打开，指针在结尾，文件不存在新建</span><br></pre></td></tr></table></figure><h3 id="文件内容读取"><a class="markdownIt-Anchor" href="#文件内容读取"></a> 文件内容读取</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;f&gt;.read(size)    读全部内容，前size长度的</span><br><span class="line">&lt;f.&gt;readline(size)  读一行内容，前size长度的</span><br><span class="line">&lt;f&gt;.readlines(hint) 读所有行，以每行为元素形成列表，前hint行的</span><br></pre></td></tr></table></figure><h3 id="文件内容写入"><a class="markdownIt-Anchor" href="#文件内容写入"></a> 文件内容写入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;f&gt;.write(s)</span><br><span class="line">&lt;f&gt;.writelines(lines)</span><br><span class="line">&lt;f&gt;.seek(offset) 0 -开头 1-当前位置 2-结尾</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 文本文件</span><br><span class="line"></span><br><span class="line">tf = open(&quot;f.txt&quot;,&quot;rt&quot;)</span><br><span class="line">print(tf.readline())</span><br><span class="line">tf.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#二进制文件</span><br><span class="line"></span><br><span class="line">bf = open(&quot;f.txt&quot;,&quot;rb&quot;)</span><br><span class="line">print(bf.readline())</span><br><span class="line">bf.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = open(&quot;output.txt&quot;,&quot;w+&quot;)</span><br><span class="line">ls =[&quot;中国&quot;,&quot;法国&quot;,&quot;美国&quot;]</span><br><span class="line">fo.writelines(ls)        # 可以写进去</span><br><span class="line">fo.seek(0)               #指针回到开头，打印出来</span><br><span class="line">for line in fo:</span><br><span class="line">    print(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><h2 id="yield用法"><a class="markdownIt-Anchor" href="#yield用法"></a> yield用法</h2><p>先把yield看成return<br>但return返回一个值后，程序结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def fun():</span><br><span class="line">    print(&quot;开始...&quot;)</span><br><span class="line">    while True:</span><br><span class="line">        res = yield 4</span><br><span class="line">        print(&quot;res:&quot;,res)</span><br><span class="line">g = fun()</span><br><span class="line">print(next(g))</span><br><span class="line">print(&quot;*&quot;*20)</span><br><span class="line">print(next(g))</span><br></pre></td></tr></table></figure><h3 id="解释"><a class="markdownIt-Anchor" href="#解释"></a> 解释</h3><ol><li><p>程序开始执行以后，因为fun函数中有yield关键字，所以fun函数并不会真的执行，<br>而是先得到一个生成器g(相当于一个对象)</p></li><li><p>直到调用next方法，fun函数正式开始执行，先执行fun函数中的print方法，然后进入while循环</p></li><li><p>程序遇到yield关键字，然后把yield想象成return,return了一个4之后，程序停止，<br>并没有执行赋值给res操作，此时next(g)语句执行完成，<br>所以输出的前两行（第一个是while上面的print的结果,第二个是return出的结果）是执行print(next(g))的结果</p></li><li><p>程序执行，输出20个星</p></li><li><p>又开始执行下面的print(next(g)),这个时候是从刚才那个next程序停止的地方开始执行的，<br>也就是要执行res的赋值操作，这时候要注意，这个时候赋值操作的右边是没有值的<br>（因为刚才那个是return出去了，并没有给赋值操作的左边传参数），<br>所以这个时候res赋值是None,所以接着下面的输出就是res:None,</p></li><li><p>程序会继续在while里执行，又一次碰到yield,这个时候同样return 出4，然后程序停止，<br>print函数输出的4就是这次return出的4</p></li><li><p>带yield的函数是一个生成器，而不是一个函数了，<br>这个生成器有一个函数就是next函数，next就相当于“下一步”生成哪个数，<br>这一次的next开始的地方是接着上一次的next停止的地方执行的，</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def fun():</span><br><span class="line">    print(&quot;开始...&quot;)</span><br><span class="line">    while True:</span><br><span class="line">        res = yield 4</span><br><span class="line">        print(&quot;res:&quot;,res)</span><br><span class="line">g = fun()</span><br><span class="line">print(next(g))</span><br><span class="line">print(&quot;*&quot;*20)</span><br><span class="line">print(g.send(7))</span><br></pre></td></tr></table></figure><p>send是发送一个参数给res的，因为上面讲到，return的时候，并没有把4赋值给res，<br>下次执行的时候只好继续执行赋值操作，只好赋值为None了，<br>而如果用send的话，开始执行的时候，先接着上一次（return 4之后）执行，先把7赋值给了res,<br>然后执行next的作用，遇见下一回的yield，return出结果后结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;&lt;h2 id=&quot;turtle画个图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#turtle画个图&quot;&gt;&lt;/a&gt; turtle画个图&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;r=25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;area=3.1415926*r*r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(area)`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;&amp;#123;:.2f&amp;#125;F&amp;quot;.format(area))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="Python" scheme="http://beichen1994.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>初探redis</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E5%88%9D%E6%8E%A2redis/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E5%88%9D%E6%8E%A2redis/</id>
    <published>2020-04-27T02:39:22.000Z</published>
    <updated>2020-04-27T02:43:57.930Z</updated>
    
    <content type="html"><![CDATA[<p>redis数据库与关系型数据库不同，是一种key-value型数据库。其中key只能是字符串，而value则可以是String、Hash Map、List、Set、Zset。每种类型的使用方式都不同。</p><hr><ul><li>String</li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set k1 v1</span><br><span class="line"></span><br><span class="line">get k1</span><br><span class="line"></span><br><span class="line">set k1 v11 </span><br><span class="line"></span><br><span class="line">get k1</span><br><span class="line"></span><br><span class="line">del k1</span><br><span class="line"></span><br><span class="line">get k1</span><br><span class="line"></span><br><span class="line">mset k1 v1 k2 v2</span><br><span class="line"></span><br><span class="line">mget k1 k2</span><br></pre></td></tr></table></figure><hr><ul><li>Hash Map</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hset h1 name liming</span><br><span class="line"></span><br><span class="line">hget h1 name</span><br><span class="line"></span><br><span class="line">hmset h1 name liming age 11</span><br><span class="line"></span><br><span class="line">hgetall h1</span><br></pre></td></tr></table></figure><hr><ul><li>List</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">lpush L1 v1</span><br><span class="line"></span><br><span class="line">lrange L1 0 0</span><br><span class="line"></span><br><span class="line">lpush L1 v2 v3</span><br><span class="line"></span><br><span class="line">lrange L1 0 -1</span><br><span class="line"></span><br><span class="line">rpush L1 r1 r2 r3</span><br><span class="line"></span><br><span class="line">lrange L1 0 -1</span><br><span class="line"></span><br><span class="line">lpop L1</span><br></pre></td></tr></table></figure><hr><ul><li>Set</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sadd S1 v1</span><br><span class="line"></span><br><span class="line">smembers S1</span><br><span class="line"></span><br><span class="line">sadd S1 v2</span><br><span class="line"></span><br><span class="line">smembers S1</span><br></pre></td></tr></table></figure><hr><ul><li>ZSet</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br><span class="line"></span><br><span class="line">type &quot;proxies:mzitu&quot;</span><br><span class="line"></span><br><span class="line">zcard &quot;proxies:mzity&quot;</span><br><span class="line"></span><br><span class="line">zrange &quot;proxies:mzitu 0 -1 withscores</span><br></pre></td></tr></table></figure><hr><ul><li>docker 安装redis</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br><span class="line"></span><br><span class="line">docker image ls -a</span><br><span class="line"></span><br><span class="line">docker run -dit -p 6379:6379 redis:latest redis-server</span><br><span class="line"></span><br><span class="line">docker  start -i 5d</span><br><span class="line"></span><br><span class="line">docker exec -it 5d redis-cli</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;redis数据库与关系型数据库不同，是一种key-value型数据库。其中key只能是字符串，而value则可以是String、Hash Map、List、Set、Zset。每种类型的使用方式都不同。&lt;/p&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="数据库" scheme="http://beichen1994.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>我对manjaro的一些探索</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E6%88%91%E5%AF%B9manjaro%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8E%A2%E7%B4%A2/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E6%88%91%E5%AF%B9manjaro%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8E%A2%E7%B4%A2/</id>
    <published>2020-04-27T00:51:46.000Z</published>
    <updated>2020-04-27T01:46:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>在初次接触linux时，我发现除了大众经常使用的Ubuntu系统外，还有人在使用manjaro。这个系统非常稳定，且不会像Ubuntu一样，经常找不到相应的软件。<br>但毕竟还是Ubuntu是老大哥，大树底下好乘凉，最终我还是选择了Ubuntu。不过我还是要记录一下我对manjaro的一些探索。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -c China</span><br><span class="line">更换镜像</span><br><span class="line">sudo pacman -Syyu</span><br><span class="line">更新软件</span><br><span class="line">git clone https://github.com/EvanMeek/Vanilla</span><br><span class="line">某个博主的i3配置</span><br><span class="line">sudo pacman -S docker</span><br><span class="line">安装docker</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">启动docker服务</span><br><span class="line">systemctl enable docker</span><br><span class="line">开机自动启动docker</span><br></pre></td></tr></table></figure><p>OpenSSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S openssh  #安装OpenSSH </span><br><span class="line">sudo systemctl enable sshd #开机自启sshd服务</span><br><span class="line">sudo systemctl start sshd #启动sshd服务</span><br></pre></td></tr></table></figure><p>编辑器和shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S vim</span><br><span class="line">安装vim</span><br><span class="line">sudo pacman -S code</span><br><span class="line">安装vscode</span><br><span class="line"></span><br><span class="line">sudo _E vim /etc/pacman.conf,去掉color注释</span><br><span class="line"></span><br><span class="line">sudo pacman -S  fish</span><br><span class="line">安装fish</span><br><span class="line"></span><br><span class="line">which fish</span><br><span class="line">chsh -s /user/bin/fish</span><br><span class="line">更改shell：bash--&gt;fish</span><br><span class="line"></span><br><span class="line">curl -L https://get.oh-my.fish | fish</span><br><span class="line">安装oh my fish插件</span><br><span class="line"></span><br><span class="line">fish_config </span><br><span class="line">更改fish配置</span><br><span class="line"></span><br><span class="line">omf install wttr</span><br><span class="line">wttr</span><br><span class="line">查看天气</span><br><span class="line"></span><br><span class="line">alias c clear</span><br><span class="line">funcsave c</span><br><span class="line"></span><br><span class="line">alias l &quot;ls -la&quot;</span><br><span class="line">funcsave l</span><br><span class="line"></span><br><span class="line">alias sudo &quot;sudo -E&quot;</span><br><span class="line">funcsave sudo </span><br><span class="line"></span><br><span class="line">fish shell下设置了 alias vim=nvim</span><br><span class="line">需要改回shell，才能用vim</span><br></pre></td></tr></table></figure><p>i3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S i3</span><br><span class="line">安装i3</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">win(mod)+Enter</span><br><span class="line">开启终端</span><br><span class="line">win(mod)+Enter</span><br><span class="line">平行开启终端</span><br><span class="line">win(mod)+v+Enter</span><br><span class="line">竖直开启终端</span><br><span class="line"></span><br><span class="line">vim ~/.Xresources</span><br><span class="line">Xft.dpi:200</span><br><span class="line">变大字体</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">（mod）+1/2/3/4/5</span><br><span class="line">进入各个桌面</span><br><span class="line"></span><br><span class="line">vim ~/.config/i3/config</span><br><span class="line">set $mod Mod1</span><br><span class="line">bindsym $mod+Return exec alacritty</span><br><span class="line">mod）+Enter可以开启alacritty</span><br><span class="line">bindsym $mod+c exec firefox</span><br><span class="line">开启firefox</span><br><span class="line"></span><br><span class="line">new_window 1pixel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exec_always  variety</span><br><span class="line">exec_always compton</span><br><span class="line">exec_always fcitx</span><br><span class="line">每次开启i3都会执行的命令</span><br><span class="line"></span><br><span class="line">(mod）+shift+r</span><br><span class="line">刷新i3</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------------------------</span><br><span class="line">sudo pacman -S alacritty</span><br><span class="line">安装显卡渲染的终端</span><br><span class="line"></span><br><span class="line">sudo pacman -S dmenu</span><br><span class="line">安装</span><br><span class="line">（mod）+S</span><br><span class="line">可以在插入一个程序</span><br><span class="line"></span><br><span class="line">vim ~/.config/alacritty/alacritty.yml</span><br><span class="line">#Point size</span><br><span class="line">size:18</span><br><span class="line">调节alacritty字体</span><br><span class="line"></span><br><span class="line">#Background opacty</span><br><span class="line">background_opacity:0.6</span><br><span class="line">设置半透明</span><br><span class="line"></span><br><span class="line">sudo pacman -S compton</span><br><span class="line">安装渲染器</span><br><span class="line">compton</span><br><span class="line"></span><br><span class="line">sudo pacman -S feh</span><br><span class="line">feh</span><br><span class="line"></span><br><span class="line">sudo pacman -S variety</span><br><span class="line">variety</span><br><span class="line">换壁纸</span><br></pre></td></tr></table></figure><p>常用软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx fcitx-im fcitx-configtool</span><br><span class="line">sudo pacman -S fcitx-sougou</span><br><span class="line">搜狗输入法</span><br><span class="line">vim ~/.xprofile</span><br><span class="line">export GTK_IM_MODEUL=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br><span class="line">系统环境变量</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">sudo pacman-S chromium</span><br><span class="line"></span><br><span class="line">sudo pacman-S liboffice</span><br><span class="line"></span><br><span class="line">sudo pacman-S transmission</span><br><span class="line">安装下载工具</span><br><span class="line"></span><br><span class="line">sudo pacman-S ranger</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在初次接触linux时，我发现除了大众经常使用的Ubuntu系统外，还有人在使用manjaro。这个系统非常稳定，且不会像Ubuntu一样，经常找不到相应的软件。&lt;br&gt;
但毕竟还是Ubuntu是老大哥，大树底下好乘凉，最终我还是选择了Ubuntu。不过我还是要记录一下我对manjaro的一些探索。&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>我的conda使用</title>
    <link href="http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84conda%E4%BD%BF%E7%94%A8/"/>
    <id>http://beichen1994.github.io/2020/04/27/%E6%88%91%E7%9A%84conda%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-27T00:35:31.000Z</published>
    <updated>2020-04-27T02:45:12.363Z</updated>
    
    <content type="html"><![CDATA[<p>conda是目前最流行的Python环境管理工具。conda的使用还是比较简单的，没有什么难度，只要熟悉相关的命令，便可用起来非常顺手。</p><p>我在使用conda过程中，偶尔会去百度conda的相关命令，因此在这里记录下我常用的conda命令。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br><span class="line">查看安装了哪些包</span><br><span class="line"></span><br><span class="line">conda env list</span><br><span class="line">conda info -e</span><br><span class="line">查看当前存在哪些虚拟环境</span><br><span class="line"></span><br><span class="line">conda update conda</span><br><span class="line">检查更新当前conda</span><br><span class="line"></span><br><span class="line">conda create -n your_env_name python=X.X（2.7、3.6等)</span><br><span class="line">创建python版本为X.X、名字为your_env_name的虚拟环境</span><br><span class="line"></span><br><span class="line">python --version</span><br><span class="line">可以检查当前python的版本</span><br><span class="line"></span><br><span class="line">source activate your_env_name(虚拟环境名称)</span><br><span class="line">conda install -n your_env_name [package]</span><br><span class="line">即可安装package到your_env_name中</span><br><span class="line"></span><br><span class="line">source deactivate</span><br><span class="line">conda deactivate</span><br><span class="line">退出python虚拟环境</span><br><span class="line"></span><br><span class="line">conda remove -n your_env_name(虚拟环境名称) --all</span><br><span class="line">删除虚拟环境</span><br><span class="line"></span><br><span class="line">conda remove --name your_env_name  package_name 、</span><br><span class="line">删除虚拟环境中的包</span><br><span class="line"></span><br><span class="line">conda create -n tf --clone rcnn</span><br><span class="line">克隆虚拟环境rcnn到tf</span><br><span class="line"></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/peterjc123/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"></span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line">设置清华镜像源</span><br><span class="line"></span><br><span class="line">conda config --show channels</span><br><span class="line">显示所有的镜像下载通道</span><br><span class="line"></span><br><span class="line">conda config --remove channels &apos;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/＇</span><br><span class="line">删除镜像</span><br><span class="line"></span><br><span class="line">conda install nb_conda_kernels</span><br><span class="line">在jupyternotebook安装虚拟环境</span><br><span class="line"></span><br><span class="line">conda config --remove-key channels</span><br><span class="line">恢复到默认源</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">vim .bashrc</span><br><span class="line">export PYTHONIOENCODING=utf-8</span><br><span class="line">source .bashrc</span><br><span class="line">设置python输入输出环境变量</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;conda是目前最流行的Python环境管理工具。conda的使用还是比较简单的，没有什么难度，只要熟悉相关的命令，便可用起来非常顺手。&lt;/p&gt;&lt;p&gt;我在使用conda过程中，偶尔会去百度conda的相关命令，因此在这里记录下我常用的conda命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="Python" scheme="http://beichen1994.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>我的i3、tmux、ranger使用</title>
    <link href="http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84i3%E3%80%81tmux%E3%80%81ranger%E4%BD%BF%E7%94%A8/"/>
    <id>http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84i3%E3%80%81tmux%E3%80%81ranger%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-26T11:38:40.000Z</published>
    <updated>2020-04-27T00:31:38.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ranger"><a class="markdownIt-Anchor" href="#ranger"></a> ranger</h2><p>ranger是一个文件管理器，可以让我们在终端下方便快捷的操作文件和文件夹，我的ranger配置文件可以在我的<a href="https://github.com/beichen1994/MyLinuxConfig/tree/master/.config" target="_blank" rel="noopener">github仓库</a>中找到。</p><p>ranger的操作方式有点类似vim，下面是我的常用命令</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hjkl左下上右</span><br><span class="line"></span><br><span class="line">gh (/home</span><br><span class="line"></span><br><span class="line">gm (/mnt</span><br><span class="line"></span><br><span class="line">gd (/dev</span><br><span class="line"></span><br><span class="line">gp (/tmp</span><br><span class="line"></span><br><span class="line">cw 重命名</span><br><span class="line"></span><br><span class="line">pp 粘贴</span><br><span class="line"></span><br><span class="line">dd 剪切</span><br><span class="line"></span><br><span class="line">yy 复制</span><br><span class="line"></span><br><span class="line">space 选中</span><br></pre></td></tr></table></figure><p>在安装与配置ranger时，我是参照了以下教程</p><ul><li><p><a href="http://www.huangpan.net/posts/ji-ke/2019-08-21-ranger.html#toc-heading-75" target="_blank" rel="noopener">Ranger 用法总结</a></p></li><li><p><a href="https://www.cnblogs.com/zhangsf/p/3322627.html" target="_blank" rel="noopener">ranger文件管理器</a></p></li><li><p><a href="https://wiki.archlinux.org/index.php/ranger_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener">ranger文档</a></p></li></ul><h2 id="tmux"><a class="markdownIt-Anchor" href="#tmux"></a> tmux</h2><p>tmux可以让我们在一个终端中同时开启多个会话，看起来更加酷炫，从此不再多个窗口来回切换。但是比较受限于屏幕大小，如果屏幕太小，窗口被切分的太小，看起来不舒服。</p><p>我常用的tmux命令如下:</p><hr><ul><li>启动与退出</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tmux</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><hr><ul><li>会话（Session）管理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tmux ls</span><br><span class="line"></span><br><span class="line">tmux new -s mysess</span><br><span class="line"></span><br><span class="line">tmux detach</span><br><span class="line"></span><br><span class="line">tmux attach -t mysess</span><br><span class="line"></span><br><span class="line">tmux switch -t mysess</span><br><span class="line"></span><br><span class="line">tmux rename-session -t 0 bc</span><br><span class="line"></span><br><span class="line">tmux kill-session -t mysess</span><br></pre></td></tr></table></figure><hr><p>*窗格（pane）管理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">tmux split-window</span><br><span class="line">划分上下两个窗格</span><br><span class="line"></span><br><span class="line">tmux split-window -h</span><br><span class="line">划分左右两个窗格</span><br><span class="line"></span><br><span class="line">tmux select-pane -U</span><br><span class="line">光标移动到上方窗格</span><br><span class="line"></span><br><span class="line">tmux select-pane -D</span><br><span class="line">光标移动到下方窗格</span><br><span class="line"></span><br><span class="line">tmux select-pane -L</span><br><span class="line">光标移动到左方窗格</span><br><span class="line"></span><br><span class="line">tmux select-pane -R</span><br><span class="line">光标移动到右方窗格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tmux swap-pane -U</span><br><span class="line">当前窗格上移</span><br><span class="line"></span><br><span class="line">tmux swap-pane -D</span><br><span class="line">当前窗格下移</span><br></pre></td></tr></table></figure><hr><ul><li>快捷键</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Ctrl+b    %</span><br><span class="line">划分左右两个窗格</span><br><span class="line"></span><br><span class="line">Ctrl+b    &quot;</span><br><span class="line">划分上下两个窗格</span><br><span class="line"></span><br><span class="line">Ctrl+b    箭头</span><br><span class="line">光标移动到其他窗格</span><br><span class="line"></span><br><span class="line">Ctrl+b    &#123;</span><br><span class="line">当前窗格左移</span><br><span class="line"></span><br><span class="line">Ctrl+b    &#125;</span><br><span class="line">当前窗格右移</span><br><span class="line"></span><br><span class="line">Ctrl+b    Ctrl+o</span><br><span class="line">当前窗格上移</span><br><span class="line"></span><br><span class="line">Ctrl+b    Alt+o</span><br><span class="line">当前窗格下移</span><br><span class="line"></span><br><span class="line">Ctrl+b x</span><br><span class="line">关闭当前窗格</span><br><span class="line"></span><br><span class="line">Ctrl+b !</span><br><span class="line">将当前窗格拆分为一个独立窗口</span><br><span class="line"></span><br><span class="line">Ctrl+b q</span><br><span class="line">显示窗格编号</span><br><span class="line"></span><br><span class="line">窗口管理</span><br><span class="line"></span><br><span class="line">tmux new-window  -n bc1</span><br><span class="line">新建一个窗口</span><br><span class="line"></span><br><span class="line">tmux select-window -t bc1</span><br><span class="line">切换窗口</span><br><span class="line"></span><br><span class="line">tmux rename-window bc1</span><br><span class="line">重命名窗口</span><br><span class="line"></span><br><span class="line">快捷键</span><br><span class="line"></span><br><span class="line">Ctrl+b    c</span><br><span class="line">创建一个新窗口</span><br><span class="line"></span><br><span class="line">Ctrl+b    w</span><br><span class="line">从列表中选择窗口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ctrl+b    ,</span><br><span class="line">重命名窗口</span><br><span class="line"></span><br><span class="line">Ctrl+b    p</span><br><span class="line">切换到上一个窗口</span><br><span class="line"></span><br><span class="line">Ctrl+b    n</span><br><span class="line">切换到下一个窗口</span><br><span class="line"></span><br><span class="line">Ctrl+b    窗口编号</span><br><span class="line">切换到指定编号的窗口</span><br></pre></td></tr></table></figure><h2 id="i3"><a class="markdownIt-Anchor" href="#i3"></a> i3</h2><p>i3是一个可以高度自定义的窗口管理器，对于i3的安装与配置，我是参考了以下4个教程。</p><ul><li><p><a href="https://blog.csdn.net/mkosto/article/details/97238317" target="_blank" rel="noopener">手把手教你使用Linux安装i3wm桌面</a></p></li><li><p><a href="https://www.jianshu.com/p/f4b3abc9a282" target="_blank" rel="noopener">Ubuntu18+i3配置</a></p></li><li><p><a href="https://www.jianshu.com/p/81917864271e" target="_blank" rel="noopener">ubuntu系统配置i3wm窗口管理器</a></p></li><li><p><a href="https://i3wm.org/docs/" target="_blank" rel="noopener">i3文档</a></p></li></ul><p>我的i3配置文件可以在我的<a href="https://github.com/beichen1994/MyLinuxConfig/tree/master/.config" target="_blank" rel="noopener">github仓库</a>中找到</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ranger&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ranger&quot;&gt;&lt;/a&gt; ranger&lt;/h2&gt;&lt;p&gt;ranger是一个文件管理器，可以让我们在终端下方便快捷的操作文件和文件夹，我的ranger配置文件可以在我的&lt;a href=&quot;https://github.com/beichen1994/MyLinuxConfig/tree/master/.config&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github仓库&lt;/a&gt;中找到。&lt;/p&gt;&lt;p&gt;ranger的操作方式有点类似vim，下面是我的常用命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>我的docker使用</title>
    <link href="http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84docker%E4%BD%BF%E7%94%A8/"/>
    <id>http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84docker%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-26T11:38:08.000Z</published>
    <updated>2020-04-27T02:21:20.993Z</updated>
    
    <content type="html"><![CDATA[<p>  初次使用docker完全是处于一个想法，我想用docker打造一个我的Python环境，随时打包，随时分享！我是在Ubuntu上安装并使用docker，安装方式可以完全采用菜鸟教程中的<a href="https://www.runoob.com/docker/ubuntu-docker-install.html" target="_blank" rel="noopener">Ubuntu Docker安装</a>.</p><a id="more"></a><p>  我们首先需要在dockerhub创建一个账号，有点类似github平台，里面的仓库是有公私之。我们可以编写dockerfile来创建自己的镜像。我偷了下懒，直接pull了官方的Ubuntu镜像并创建容器。在这个容器里安装自己的Python环境。如果要使用的话，需要进入该容器中，再运行自己的Python程序。当然了我们也可可以使用vscode，通过ssh连接到docker容器中，这个远程连接并运行程序的功能是免费的，不想Pycharm需要升级到企业版才可以使用，所以VScode真的是良心产品。由于我的镜像中会包含一些我的文件，所以我将仓库设为了私有，如果你想使用，可以通过邮箱联系我。由于我是个初学者，我的docker镜像越来越大，竟也有十几G之大。不过我还是可以接受的。</p><p>  这张图非常形象的描绘了docker的使用原理。<br><img src="https://s1.ax1x.com/2020/04/27/JRcidI.png" alt="JRcidI.png"></p><p>  下面我将介绍常用的docker命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker login 登录</span><br><span class="line">docker logout  退出docker登录</span><br><span class="line"></span><br><span class="line">docker pull beichen1994/python:v1   下载beichen1994仓库下的python:v1镜像</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker image ls -a  列出本地所有镜像</span><br><span class="line">docker image rm 9eeba   删除镜像</span><br><span class="line">docker rmi centos/centos:7.2</span><br><span class="line">删除其中一个镜像，这里的镜像有两个repo引用，并且没有容器使用</span><br><span class="line">即删除时指定名称，而不是IMAGE ID。</span><br><span class="line"></span><br><span class="line">docker container ls -a  列出本地所有容器</span><br><span class="line">docker container rm a43d5   删除容器 docker container prune  删除所有容器</span><br><span class="line">docker container logs  查看容器日志</span><br><span class="line">docker container start a43d5  启动关闭的容器</span><br><span class="line">docker container stop a43d5  关闭容器</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker commit -a&quot;beichen1994&quot; -m&quot;all kinds of python environment&quot; 3976 py_env</span><br><span class="line">使用 docker commit 命令来将容器打包为镜像</span><br><span class="line"></span><br><span class="line">docker tag py_env:latest beichen1994/python:v3</span><br><span class="line">将这个新镜像打上 tag，方便在公共服务器进行上传</span><br><span class="line"></span><br><span class="line">docker push beichen1994/python:v4</span><br><span class="line">上传镜像</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker export 7691a814370e &gt; ubuntu.tar  导出容器</span><br><span class="line">docker import - test/ubuntu:v1   导入容器</span><br><span class="line">docker inspect 89fc 查看docker容器详细信息</span><br><span class="line">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos;</span><br><span class="line">628a windows:172.17.0.2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run；创建和启动一个新的容器实例，操作对象是镜像</span><br><span class="line"></span><br><span class="line">docker run -dit -p 5592:5592 -p 5593:5593 -p 8022:22 -p 12345:8888 -p 6006:6006 -v /C/Users/86176/Desktop/python:/home/python  beichen1994/python:v2  /bin/bash</span><br><span class="line">新建容器，宿主机与docker的端口映射，容器名，镜像和路径映射</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker exec:在已运行的容器中，执行命令，操作对象是容器,并且退出时，容器不会停止</span><br><span class="line">docker exec -it 69d1 /bin/bash </span><br><span class="line">在新的终端进入正在运行的容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker start: 启动已经停止的容器</span><br><span class="line">docker start -i 282fae</span><br><span class="line">指定交互式，启动282fae容器</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意 在docker容器中共 /lib/systemd/system/docker.service 中 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375 才会正常显示端口</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --port 8888 --ip 0.0.0.0 --allow-root</span><br><span class="line">docker运行jupyter</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io docker-ce</span><br><span class="line">sudo apt-get autoremove</span><br><span class="line">卸载docker</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  初次使用docker完全是处于一个想法，我想用docker打造一个我的Python环境，随时打包，随时分享！我是在Ubuntu上安装并使用docker，安装方式可以完全采用菜鸟教程中的&lt;a href=&quot;https://www.runoob.com/docker/ubuntu-docker-install.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu Docker安装&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>我的vim使用</title>
    <link href="http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84vim%E4%BD%BF%E7%94%A8/"/>
    <id>http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84vim%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-26T04:22:50.000Z</published>
    <updated>2020-04-27T00:47:16.870Z</updated>
    
    <content type="html"><![CDATA[<p>  很多人都说vim是最好用的编辑器，抱着好奇的心理我尝试了。的确，好用是好用，但想改变windows记事本类型的编辑器的使用习惯好难。。。(捂脸)</p><p>  vim使用需要搭配配置文件以及安装所需的插件，具体的配置文件.vimrc,可以参考我的<a href="https://github.com/beichen1994/MyLinuxConfig/blob/master/.vimrc" target="_blank" rel="noopener">github仓库</a></p><a id="more"></a><p>  感兴趣的朋友也可以直接查看<a href="http://vimcdoc.sourceforge.net/" target="_blank" rel="noopener">vim文档</a></p><p>  使用vim少不了命令操作，下面我介绍一下常用的vim命令，总结下来无外乎定位、插入、删除、替换、重复、匹配、查找、可视化</p><hr><ul><li>定位</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">左下上右</span><br><span class="line">hjkl </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">按word定位</span><br><span class="line">w </span><br><span class="line"></span><br><span class="line">按单词尾定位</span><br><span class="line">e </span><br><span class="line"></span><br><span class="line">按单词头定位</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">加上数字倍数</span><br><span class="line">5w</span><br><span class="line">2b</span><br><span class="line">9l</span><br><span class="line"></span><br><span class="line">直接行首</span><br><span class="line">0</span><br><span class="line">直接行尾</span><br><span class="line">$</span><br><span class="line">直接文本首</span><br><span class="line">gg</span><br><span class="line">直接文本尾</span><br><span class="line">G</span><br><span class="line">2G</span><br></pre></td></tr></table></figure><hr><ul><li>插入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">在后方插入</span><br><span class="line">i </span><br><span class="line"></span><br><span class="line">插入3个go</span><br><span class="line">3i go jj(ESC)</span><br><span class="line"></span><br><span class="line">在前方插入</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line">插入</span><br><span class="line">o</span><br><span class="line">插入</span><br><span class="line">O</span><br></pre></td></tr></table></figure><hr><ul><li>删除</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x  //删除</span><br><span class="line">X  //删除</span><br><span class="line">d  //删除</span><br><span class="line">dw  //删除word</span><br><span class="line">de  //删除end</span><br><span class="line">d2e   //删除两个单词</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yy   //复制</span><br><span class="line">dd   //剪切</span><br><span class="line">pp   //粘贴</span><br></pre></td></tr></table></figure><hr><ul><li>替换</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">替换成e</span><br><span class="line">re</span><br></pre></td></tr></table></figure><hr><ul><li>匹配与查找</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">匹配括号</span><br><span class="line">%</span><br><span class="line"></span><br><span class="line">查找w</span><br><span class="line">fw</span><br><span class="line"></span><br><span class="line">查找3个q</span><br><span class="line">3fq</span><br><span class="line"></span><br><span class="line">查找text  </span><br><span class="line">/text </span><br><span class="line"></span><br><span class="line">查找下一个text</span><br><span class="line">/text n</span><br></pre></td></tr></table></figure><hr><ul><li>可视化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v   //可视化模式</span><br><span class="line">V   //可视化模式</span><br><span class="line">v e l d  //进入可视化，选中e，向右移动，删除</span><br></pre></td></tr></table></figure><hr><ul><li>退出</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wq 存盘并退出</span><br><span class="line">wq! 存盘并强制退出</span><br><span class="line">q!  只强制退出</span><br></pre></td></tr></table></figure><p>由于我设置了配置文件，所以我的自定义退出方式如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">,w 保存</span><br><span class="line">,q 退出</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  很多人都说vim是最好用的编辑器，抱着好奇的心理我尝试了。的确，好用是好用，但想改变windows记事本类型的编辑器的使用习惯好难。。。(捂脸)&lt;/p&gt;&lt;p&gt;  vim使用需要搭配配置文件以及安装所需的插件，具体的配置文件.vimrc,可以参考我的&lt;a href=&quot;https://github.com/beichen1994/MyLinuxConfig/blob/master/.vimrc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github仓库&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>我的Ubuntu常用命令</title>
    <link href="http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-04-26T03:50:02.000Z</published>
    <updated>2020-04-27T00:53:54.529Z</updated>
    
    <content type="html"><![CDATA[<p>  既然使用了Ubuntu，那当然想能够发挥她的最大效用啦，为了可以更好的使用Ubuntu，有必要熟悉并掌握如下命令</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">切换到root用户</span><br><span class="line"></span><br><span class="line">su root</span><br><span class="line"></span><br><span class="line">为root用户设置密码</span><br><span class="line"></span><br><span class="line">sudo passwd root</span><br><span class="line"></span><br><span class="line">切换到wyq用户</span><br><span class="line"></span><br><span class="line">su wyq</span><br><span class="line"></span><br><span class="line">更新</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">安装依赖包</span><br><span class="line"></span><br><span class="line">sudo apt --fix-broken install</span><br></pre></td></tr></table></figure><a id="more"></a><hr><ul><li>清理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">清理旧版本的软件缓存</span><br><span class="line"></span><br><span class="line">apt-get autoclean</span><br><span class="line"></span><br><span class="line">清理所有软件缓存</span><br><span class="line">apt-get clean</span><br><span class="line"></span><br><span class="line">删除系统不再使用的孤立软件</span><br><span class="line">apt-get autoremove</span><br></pre></td></tr></table></figure><hr><ul><li>文件夹/文件常规操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">列出文件</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line">定位目录</span><br><span class="line"></span><br><span class="line">cd /home/spider</span><br><span class="line"></span><br><span class="line">打印工作目录</span><br><span class="line"></span><br><span class="line">pwd</span><br><span class="line"></span><br><span class="line">生成文件夹</span><br><span class="line"></span><br><span class="line">mkdir  spider</span><br><span class="line"></span><br><span class="line">生成1.txt文件</span><br><span class="line"></span><br><span class="line">touch 1.txt</span><br><span class="line"></span><br><span class="line">复制1.txt到2.txt</span><br><span class="line"></span><br><span class="line">cp /home/spider/1.txt  /home/wyq/Desktop/spider/2.txt</span><br><span class="line"></span><br><span class="line">重命名</span><br><span class="line"></span><br><span class="line">mv filename1 filename2</span><br><span class="line"></span><br><span class="line">移动文件 </span><br><span class="line"></span><br><span class="line">mv filename dirname</span><br><span class="line"></span><br><span class="line">删除文件/文件夹</span><br><span class="line"></span><br><span class="line">rm -rf filename/dirname</span><br><span class="line"></span><br><span class="line">批量删除</span><br><span class="line"></span><br><span class="line">find . -type f -name &quot;*something*&quot;</span><br><span class="line"></span><br><span class="line">find . -type f -name &quot;*something*&quot; -delete</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">递归修改文件夹权限为777</span><br><span class="line"></span><br><span class="line">chmod -R 777 dirname</span><br></pre></td></tr></table></figure><hr><ul><li>压缩与解压缩</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">解压zip</span><br><span class="line"></span><br><span class="line">unzip FileName.zip </span><br><span class="line"></span><br><span class="line">解压文件夹下所有zip</span><br><span class="line"></span><br><span class="line">ls *.zip | xargs -n1 unzip -o</span><br><span class="line"></span><br><span class="line">将DirName本身压缩</span><br><span class="line"></span><br><span class="line">zip FileName.zip DirName </span><br><span class="line"></span><br><span class="line">压缩，递归处理，将指定目录下的所有文件和子目录一并压缩</span><br><span class="line"></span><br><span class="line">zip -r FileName.zip DirName</span><br><span class="line"></span><br><span class="line">rar压缩与解压</span><br><span class="line"></span><br><span class="line">sudo apt-get install rar</span><br><span class="line"></span><br><span class="line">rar a filename.rar filename/</span><br><span class="line"></span><br><span class="line">sudo apt-get install unrar</span><br><span class="line"></span><br><span class="line">unrar x update.rar update/</span><br><span class="line"></span><br><span class="line">unrar e update.rar</span><br><span class="line"></span><br><span class="line">解压p7zip</span><br><span class="line"></span><br><span class="line">sudo apt-get install p7zip</span><br><span class="line"></span><br><span class="line">7z x filename.7z -r -o/home/xx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">解压tar</span><br><span class="line"></span><br><span class="line">tar -zxvf archive_name.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf archive_name.tar.gz -C /tmp/extract_here/</span><br></pre></td></tr></table></figure><hr><ul><li>硬盘挂载</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cd /mnt</span><br><span class="line">mkdir disk</span><br><span class="line"></span><br><span class="line">查看所有硬盘</span><br><span class="line"></span><br><span class="line">sudo fdisk -l</span><br><span class="line"></span><br><span class="line">查看该硬盘的文件类型</span><br><span class="line"></span><br><span class="line">file -s /dev/sdb1</span><br><span class="line"></span><br><span class="line">挂载硬盘</span><br><span class="line"></span><br><span class="line">sudo mount -t ext4 /dev/sdb1 /mnt/disk/</span><br><span class="line"></span><br><span class="line">卸载硬盘</span><br><span class="line"></span><br><span class="line">sudo umount /dev/sdb1</span><br><span class="line"></span><br><span class="line">挂载外接盘</span><br><span class="line"></span><br><span class="line">mount  /dev/sdc1 /mnt</span><br><span class="line"></span><br><span class="line">修改文件夹下所有文件的权限</span><br><span class="line"></span><br><span class="line">sudo chmod -R 775 spider</span><br></pre></td></tr></table></figure><hr><ul><li>查找</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查找软件安装目录</span><br><span class="line"></span><br><span class="line">sudo find / -name chromium-browser</span><br><span class="line"></span><br><span class="line">whereis chromium-browser</span><br><span class="line"></span><br><span class="line">which chromium-browser</span><br></pre></td></tr></table></figure><hr><ul><li>ubuntu用命令启动程序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br><span class="line">然后，在打开的.bashrc中添加如下的数据：</span><br><span class="line">export PATH=$PATH:/opt/google/chrome  //后面是chrome所在的目录</span><br><span class="line">export PATH=$PATH:/opt/baidunetdisk</span><br><span class="line">然后，保存。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重新打开一个新的终端</span><br><span class="line">google-chrome</span><br><span class="line">baidunetdisk</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  既然使用了Ubuntu，那当然想能够发挥她的最大效用啦，为了可以更好的使用Ubuntu，有必要熟悉并掌握如下命令&lt;/p&gt;&lt;hr&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;切换到root用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;su root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;为root用户设置密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo passwd root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;切换到wyq用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;su wyq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装依赖包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt --fix-broken install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>我的ubuntu必备工具与软件</title>
    <link href="http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84ubuntu%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7%E4%B8%8E%E8%BD%AF%E4%BB%B6/"/>
    <id>http://beichen1994.github.io/2020/04/26/%E6%88%91%E7%9A%84ubuntu%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7%E4%B8%8E%E8%BD%AF%E4%BB%B6/</id>
    <published>2020-04-26T00:28:00.000Z</published>
    <updated>2020-04-26T04:54:08.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2><p>  我使用ubuntu也有一段时间了，越用感觉越好用，甚至一度想弃用windows，但无奈有些软件只有win版，无奈只能将ubuntu作为辅助工具使用。在使用过程中，我觉得有些软件是很好用且是必装的，在这里记录一下。</p><a id="more"></a><h2 id="必装软件"><a class="markdownIt-Anchor" href="#必装软件"></a> 必装软件</h2><ul><li>software update</li></ul><blockquote><p>这个不是软件，是ubuntu中的软件更新，一开始要注意配置其中的软件源，否则在安装或更新软件时，会报错。配置好之后，运行一下代码。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li>synergy</li></ul><blockquote><p>这个软件简直不能再方便，可以让我们用一副键鼠同时操作多台电脑，比如我现在就在用Surface作为主机使用，将ubuntu作为客户机使用，只使用Surface的键鼠就可以同时操作Surface与Unbuntu.</p></blockquote><ul><li>ssh</li></ul><blockquote><p>这个就不多说了，远程连接必备，必装！</p></blockquote><ul><li>samba</li></ul><blockquote><p>这个软件可以将共享文件夹映射到windows，从此我们可以愉快的在windows中操作linxu中的文件夹了,访问速度还是比较快,但是别忘了给足权限喔。具体使用可以参考(<a href="https://www.cnblogs.com/gzdaijie/p/5194033.html" target="_blank" rel="noopener">https://www.cnblogs.com/gzdaijie/p/5194033.html</a>)、(<a href="https://www.linuxidc.com/Linux/2018-11/155466.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2018-11/155466.htm</a>)</p></blockquote><ul><li>git</li></ul><blockquote><p>这个对于程序员来说并不陌生，平时写代码或者写作，都可以通过git同步到github平台。让我们的代码和文章管理更加规范化。但学习成本还是比较高，但是也是比较值得学习并使用的。</p></blockquote><ul><li>vscode</li></ul><blockquote><p>绝对良心的编辑器，有了她，你不再需要其他的编辑软件，有了她，她就是你的唯一！她就像一个变形金刚，你给了她什么插件，她就变成什么！</p></blockquote><blockquote><p>推荐本地插件:<br>Chinese Langeage Pack for Visual Studio Code、Python、 Markdownlint、Markdown Preview Enhanced、Latex Workshop、Remote-SSH、Remote-SSh:Editing Configuration Files、</p></blockquote><blockquote><p>推荐远程插件:<br>Chinese Langeage Pack for Visual Studio Code、Python、Python for Vscode、Jupyter、VSCode Jupyter Notebook Previewer、</p></blockquote><ul><li>vim</li></ul><blockquote><p>都说vim是最好用的编辑器，这个软件对于用惯了windows记事本之类编辑器的人来说简直是噩梦。我一开始使用的时候，一脸懵逼，这是什么玩意！学习成本也非常高。但如果真的用好了的话，那将是一种非凡的享受。我目前也是刚刚入门，对于vim的使用也是一知半解。vim使用的话，需要配合配置文件.vimrc以及需要安装一些插件vim-plug，感兴趣的话，可以参考一下我的github中有相关vim配置文件。</p></blockquote><ul><li>ranger</li></ul><blockquote><p>对于终端用户来说，这个软件是一个福音，他给了我们一个在终端中可视化操作文件的方式。安装方式也非常简单，直接在终端中输入 sudo apt-get install ranger即可。操作方式有点类似vim，具体操作指令也需要学习一下。</p></blockquote><ul><li>tmux</li></ul><blockquote><p>这个是一个终端多开的软件，我们可以在一个终端中同时打开多个会话，每个会话都可以相当于一个终端。从此我们不再需要打开好多个终端界面，来回进行切换！！</p></blockquote><ul><li>docker</li></ul><blockquote><p>这个相当于一个虚拟机，安装之后，可以进入到创建的的容器中，进行我们想要的操作。有时我们在共享我们的代码或者应用时，在我们的环境中是可以正常运行的，但到了别人的环境中就会报错。所以我们可以在docker容器中进行操作，将整个容器打包为镜像，分享给别人。在docker hub中已经有很多已经打包好的docker镜像供我们使用，如ubuntu镜像，mysql镜像，redis镜像等，所以我们在使用一些应用时，可以直接pull我们想要的镜像即可，方便快捷。</p></blockquote><blockquote><p>我之所以使用docker，是因为我想打造一个自己的Python环境，在这个容器里，我安装了各种我需要的Python环境，当我更换电脑时，我不用一遍遍的重复安装python环境，而是直接pull我的docker镜像，里面就已经包装好了我需要的Python环境。当然了我基于的还是ubuntu镜像。</p></blockquote><ul><li>miniconda</li></ul><blockquote><p>有时候docker中的Python环境需要开放端口进行浏览器的可视化，docker是没有界面的，所以不得已在本地中安装了miniconda。以备不时之需吧。</p></blockquote><ul><li>npm+hexo</li></ul><blockquote><p>这个是为了写博客用的。</p></blockquote><ul><li>latex环境</li></ul><blockquote><p>这个是为了编写latex文件用的。</p></blockquote><ul><li>chrome google-access-helpser</li></ul><blockquote><p>我觉得chrome浏览器是最好用的浏览器之一，不过由于在国内需要科学上网才能更好的发挥chrome浏览器的功效，所以，我不得已使用了google-access-helper，虽然还是无法科学上网，但至少让我可以同步我的chrome标签。</p></blockquote><ul><li>smplayer</li></ul><blockquote><p>linux下的视频播放器，比较无感</p></blockquote><ul><li>shutter</li></ul><blockquote><p>linux下的截图软件，也比较无感</p></blockquote><ul><li>sougou输入法</li></ul><blockquote><p>没办法，中文输入始终是不太友好，这个也只能是将就使用</p></blockquote><ul><li>teamviewer</li></ul><blockquote><p>异地远程控制软件，和通过ssh连接方式不同，通过外网来进行连接，所以有时候会变得非常卡顿。甚至被识别为商业用户，限制使用时间。现在已经不怎么使用了。</p></blockquote><ul><li>i3+lightdm(登录管理)+compton+feh</li></ul><blockquote><p>对于Ubuntu用户来说，使用gnome桌面软件可能与windows并无两样。我们可以使用i3桌面，非常轻量化，不会过多占用系统资源。通过i3配置文件自定义我们的桌面环境，最重要的是，它采用的是平铺式窗口，且可以半透明化，使用起来非常舒服。</p></blockquote><blockquote><p>如果使用i3，还需要同时安装compton（sudo apt-get install compton）(~/.config/compton.conf)和feh(sudo apt-get install feh)(feh --fig-scale ~/Pictures/wallpaper/wallpaper01.jpg)</p></blockquote><h2 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h2><p>  以上都是我在使用ubuntu过程中一直在使用的工具和软件，如果对你有帮助，我会非常高兴。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#引言&quot;&gt;&lt;/a&gt; 引言&lt;/h2&gt;&lt;p&gt;  我使用ubuntu也有一段时间了，越用感觉越好用，甚至一度想弃用windows，但无奈有些软件只有win版，无奈只能将ubuntu作为辅助工具使用。在使用过程中，我觉得有些软件是很好用且是必装的，在这里记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Daily Dictation</title>
    <link href="http://beichen1994.github.io/2020/04/21/daily_dictation/"/>
    <id>http://beichen1994.github.io/2020/04/21/daily_dictation/</id>
    <published>2020-04-21T13:49:37.000Z</published>
    <updated>2020-04-27T02:45:36.636Z</updated>
    
    <content type="html"><![CDATA[<p><em>Mother Teresa, who received a Nobel Peace Prize for her work(on behalf of) for the poor, dies in CalcuHa, India - she was 87 years old.</em></p><a id="more"></a><p>Jerry, what time do you have?<br><em>Sir, what time do you have?</em><br>I have 5 o’clock.</p><p>There are three things I have learned.<br>Never to discuss with people, religon, politics and the Great Pumkin.</p><p>Now let somebody tell you, you can’t do some.<br><em>Don’t ever let somebody tell you you can’t do something.</em></p><p>I have come here to true  bombgang and kick ass and all the bombgang.<br><em>I have come here to chew bubblegum and kick ass… and I’m all out of bubblegum!</em></p><p>seak alive  every moment</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Mother Teresa, who received a Nobel Peace Prize for her work(on behalf of) for the poor, dies in CalcuHa, India - she was 87 years old.&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="英文" scheme="http://beichen1994.github.io/categories/%E8%8B%B1%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>词袋模型</title>
    <link href="http://beichen1994.github.io/2020/03/25/%E8%AF%8D%E8%A2%8B%E6%A8%A1%E5%9E%8B/"/>
    <id>http://beichen1994.github.io/2020/03/25/%E8%AF%8D%E8%A2%8B%E6%A8%A1%E5%9E%8B/</id>
    <published>2020-03-25T01:47:08.000Z</published>
    <updated>2020-04-27T02:21:16.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文档信息向量化"><a class="markdownIt-Anchor" href="#文档信息向量化"></a> 文档信息向量化</h1><p>数学家总喜欢用向量，所以称之为文档信息的向量化，实质是将文档信息数值化。我们可以提取多少信息，模型就可以分析出多少信息。</p><h2 id="one-hotbig-of-wordsbow词袋模型"><a class="markdownIt-Anchor" href="#one-hotbig-of-wordsbow词袋模型"></a> One-hot/Big of Words/BOW/词袋模型</h2><p>将文本直接简化为一系列词的集合，每个词都是独立的</p><a id="more"></a><ol><li><p>分词，对每个词编号，形成字典<br>大鱼吃小鱼也吃虾米，小鱼吃虾米<br>{‘大鱼’:1,‘吃’:2,‘小鱼’:3,‘也’:4,‘虾米’:5}</p></li><li><p>用0/1代表该词是否出现过，从而将文本表示为一个特征向量</p><p>大鱼吃小鱼也吃虾米<br>[大鱼，吃，小鱼，也，吃，虾米]</p><p>[大鱼，吃，小鱼，也，虾米]<br>[1,2,1,1,1]</p><p>小鱼吃虾米<br>[小鱼，吃，虾米]</p><p>[大鱼，吃，小鱼，也，虾米]<br>[0,1,1,0,1]</p></li></ol><ul><li><p>优点：解决了分类器不好处理离散数据的问题</p></li><li><p>缺点<br>不考虑词与词之间的顺序与前后关系<br>特征向量是离散稀疏的，每个词都是茫茫0海中的1.</p></li></ul><h2 id="set-of-words词级模型"><a class="markdownIt-Anchor" href="#set-of-words词级模型"></a> Set of Words/词级模型</h2><p>大鱼吃小鱼也吃虾米<br>[大鱼，吃，小鱼，也，吃，虾米]</p><p>[大鱼，吃，小鱼，也，虾米]<br>[1,1,1,1,1]</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;文档信息向量化&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#文档信息向量化&quot;&gt;&lt;/a&gt; 文档信息向量化&lt;/h1&gt;&lt;p&gt;数学家总喜欢用向量，所以称之为文档信息的向量化，实质是将文档信息数值化。我们可以提取多少信息，模型就可以分析出多少信息。&lt;/p&gt;&lt;h2 id=&quot;one-hotbig-of-wordsbow词袋模型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#one-hotbig-of-wordsbow词袋模型&quot;&gt;&lt;/a&gt; One-hot/Big of Words/BOW/词袋模型&lt;/h2&gt;&lt;p&gt;将文本直接简化为一系列词的集合，每个词都是独立的&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="neural network and deep learning" scheme="http://beichen1994.github.io/tags/neural-network-and-deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>深度学习-Kears+TensorFlow</title>
    <link href="http://beichen1994.github.io/2020/03/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Kears-TensorFlow/"/>
    <id>http://beichen1994.github.io/2020/03/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Kears-TensorFlow/</id>
    <published>2020-03-23T06:43:45.000Z</published>
    <updated>2020-04-27T02:24:55.121Z</updated>
    
    <content type="html"><![CDATA[<p>Tensorflow: 作为google主推的深度学习框架，未来支持会更好</p><p>Keras：跨平台兼容，后台Tensorflow/Theano均可，可以直接当黑箱使用，速度稍慢，隐藏了很多内部参数</p><p>Keras+Tensorflow组合：以Keras为主，用tensorflow语句来写扩展功能并和Keras结合使用。</p><a id="more"></a><p>Tensorflow安装：</p><ul><li>CPU版本: pip3 install --upgrade tensorflow</li><li>GPU版本: pip3 install --upgrade tensorflow-gpu，需要进一步安装CUDA和cuDNN。</li></ul><p>Keras安装:</p><ul><li><p>依赖包：numpy，scipy，pyyaml，HDF5，h5py，如果拟合CNN（卷积神经网络），推荐安装cuDNN。</p></li><li><p>后端框架：Tensorflow</p></li><li><p>pip install keras -U --pre</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tensorflow: 作为google主推的深度学习框架，未来支持会更好&lt;/p&gt;&lt;p&gt;Keras：跨平台兼容，后台Tensorflow/Theano均可，可以直接当黑箱使用，速度稍慢，隐藏了很多内部参数&lt;/p&gt;&lt;p&gt;Keras+Tensorflow组合：以Keras为主，用tensorflow语句来写扩展功能并和Keras结合使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="neural network and deep learning" scheme="http://beichen1994.github.io/tags/neural-network-and-deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>深度学习-RNN</title>
    <link href="http://beichen1994.github.io/2020/03/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-RNN/"/>
    <id>http://beichen1994.github.io/2020/03/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-RNN/</id>
    <published>2020-03-23T02:14:10.000Z</published>
    <updated>2020-04-27T02:24:58.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传统的bpback-propagation神经网络结构"><a class="markdownIt-Anchor" href="#传统的bpback-propagation神经网络结构"></a> 传统的BP(back propagation)神经网络结构</h2><ul><li>分为输入层,隐含层,输出层三层.在输出层,比较预测值与实测值,得到误差,调整隐含层的连接权重,并动态增删神经元</li><li>具体的网络输出并不会影响下一次的网络输入信号,最终保留的是隐含层的结构和连接权重</li></ul><a id="more"></a><h2 id="recurrent-neural-network"><a class="markdownIt-Anchor" href="#recurrent-neural-network"></a> Recurrent Neural Network</h2><p>文本是典型的<strong>序列数据</strong>,后续的文本内容和前导文本内容之间存在<strong>语义关联</strong>,传统的神经网络模型并不能匹配这一数据特征.</p><p>希望分类器能够记得上下文的内容并用于预测,特别是将上文内容用于预测.</p><p>RNN是包含循环的神经网络,允许原有输入信息的持久化,RNN是对应问嗯这汇总序列类型数据的最自然的神经网络架构</p><p>每个节点的计算,都是基于当前输入和原先输入内容的<strong>记忆</strong>(原先的输出)而来</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>t</mi></mrow></msub><mo>=</mo><mi>f</mi><mo>(</mo><mi>U</mi><msub><mi>x</mi><mrow><mi>t</mi></mrow></msub><mo>+</mo><mi>W</mi><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">s_{t} = f(Ux_{t}+Ws_{t-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><msub><mi>x</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Ux_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">U</span></span></span></span>是新数据所占的百分比<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Ws_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span></span>是原先输入的记忆所占的百分比<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">s</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>是输入的节点</p><p>RNN存在的问题</p><ul><li>RNN的记忆力不够久!当相关信息和预测词位置之间的间隔小时,RNN的表现很好.但是需要联想前面很远的信息进行预测! The vanishing(消失的) gradient probelm for RNNs.</li></ul><h2 id="long-short-term网络"><a class="markdownIt-Anchor" href="#long-short-term网络"></a> Long Short Term网络</h2><ul><li><p>属于RNN的一种网络,可以学习长期依赖信息.</p></li><li><p>好记性不如烂笔头，LSTM默认数据中有很多长期信息，因此直接用一个小本子(cell)来记录信息</p></li><li><p>但是信息中也有很多无用的，因此模型会随机丢弃一部分信息，通过模型训练，不断保留有价值的信息，丢弃无用的信息</p></li><li><p>cell状态：在图上水平贯穿运行。类似于传送带，信息在上面持续传输，中间会有各种门进行信息流的更新。</p></li><li><p>门：用于控制信息的增加和减少的阀门。输出一个0-1之间的值，1表示这一趟的信息全部输入信息流，0表示这一趟的信息全部忘记（信息流无变化）</p></li><li><p>忘记门：决定从cell状态中丢弃什么信息，它把上一次的状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">h_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">h</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>和这一次的输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>合并进行处理。即$$f_{t} = \sigma(W_{f}.(h_{t-1},x_{t})+b_{f})$$，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.10764em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>会在更新门中从原有的cell状态中减去。<br><img src="https://s1.ax1x.com/2020/03/23/87SVQP.png" alt="87SVQP.png"></p></li><li><p>记忆门：哪些信息应该被记住，首先，用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">i</span><span class="mord mathit">d</span></span></span></span>决定什么信息需要被忘记。即$$i_{t} = \sigma(W_{i}.(h_{t-1},x_{t})+b_{i})$$，然后用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit">n</span><span class="mord mathit">h</span></span></span></span>决定哪些新增信息需要被记住，即$$C_{t} = \sigma(W_{C}.(h_{t-1},x_{t})+b_{C})$$<br><img src="https://s1.ax1x.com/2020/03/23/87SAzt.png" alt="87SAzt.png"></p></li><li><p>更新门：把老的cell状态更新为新的cell状态，XOR：去除<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.10764em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>中相同的信息，比如，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.10764em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>中有1，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>中有1，2，3，则更新门输出2，3. AND：增加信息。将忘记门中的信息与记忆门中的信息合并，即$$C_{t}=f_{t} XOR C_{t-1} AND i_{t} XOR C_{t}$$，得到当前单元的cell状态。<br><img src="https://s1.ax1x.com/2020/03/23/87SneS.png" alt="87SneS.png"></p></li><li><p>输出门：由记忆即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>来决定输出什么值。即$$o_{t} = \sigma(W_{o}(h_{t-1},x_{t})+b_{o})$$,$$h_{t}=o_{t}*tanh(C_{t})$$<br><img src="https://s1.ax1x.com/2020/03/23/87SkRI.png" alt="87SkRI.png"></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传统的bpback-propagation神经网络结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#传统的bpback-propagation神经网络结构&quot;&gt;&lt;/a&gt; 传统的BP(back propagation)神经网络结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;分为输入层,隐含层,输出层三层.在输出层,比较预测值与实测值,得到误差,调整隐含层的连接权重,并动态增删神经元&lt;/li&gt;
&lt;li&gt;具体的网络输出并不会影响下一次的网络输入信号,最终保留的是隐含层的结构和连接权重&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="neural network and deep learning" scheme="http://beichen1994.github.io/tags/neural-network-and-deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>TotalCommand</title>
    <link href="http://beichen1994.github.io/2020/03/21/TotalCommand/"/>
    <id>http://beichen1994.github.io/2020/03/21/TotalCommand/</id>
    <published>2020-03-21T14:38:28.000Z</published>
    <updated>2020-04-26T05:06:49.684Z</updated>
    
    <content type="html"><![CDATA[<p>TotalCommand一般被称为TC，是windows下的一款资源管理器，有了她，windows下的所有文件皆被玩弄于鼓掌之间，哈哈！！</p><h2 id="目录与磁盘跳转"><a class="markdownIt-Anchor" href="#目录与磁盘跳转"></a> 目录与磁盘跳转</h2><p>Tab 切换左右窗口</p><p>alt+F1 左窗口磁盘</p><p>alt+F2 右窗口磁盘</p><a id="more"></a><p>alt+左/右  在历史目录前进后退</p><p>alt+下 显示所有历史目录</p><p>ctrl+d+字母 跳转目录</p><p>ctrl+/ 跳到根目录</p><p>ctrl+b 显示所有文件</p><p>ctrl+b 回到正常模式</p><p>backspace  跳到父目录</p><h2 id="文件搜索"><a class="markdownIt-Anchor" href="#文件搜索"></a> 文件搜索</h2><p>alt+F7 搜索文件</p><p>xxx+enter 快速搜索并进入</p><p>F3 预览</p><p>ESC 退出预览</p><p>ctrl+q 在另一侧预览</p><p>ctrl+q 退出预览</p><p>ctrl+end 跳到结尾</p><h2 id="小tip"><a class="markdownIt-Anchor" href="#小tip"></a> 小tip</h2><p>shift+F4 新建文件</p><p>ctrl+3 复制所有文件的文件名</p><p>ctrl+z 对文件注释</p><p>alt+1/2/4/6 显示隐藏工具栏等</p><p>ctrl+F8 显示文件夹树</p><p>文件管理：定位+选择+操作</p><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p>lister plugins 查看插件   wlx</p><p>packer plugins 压缩插件    wcx</p><p>file system plugins 文件系统插件  wfx</p><p>content plugins 内容插件  wdx</p><p>实质上都是dll，把一些文件复制到TC下的plugin目录下，并在对应的配置文件ini中做相应的配置记录</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TotalCommand一般被称为TC，是windows下的一款资源管理器，有了她，windows下的所有文件皆被玩弄于鼓掌之间，哈哈！！&lt;/p&gt;&lt;h2 id=&quot;目录与磁盘跳转&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#目录与磁盘跳转&quot;&gt;&lt;/a&gt; 目录与磁盘跳转&lt;/h2&gt;&lt;p&gt;Tab 切换左右窗口&lt;/p&gt;&lt;p&gt;alt+F1 左窗口磁盘&lt;/p&gt;&lt;p&gt;alt+F2 右窗口磁盘&lt;/p&gt;
    
    </summary>
    
    
      <category term="神器" scheme="http://beichen1994.github.io/categories/%E7%A5%9E%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>技术的本质</title>
    <link href="http://beichen1994.github.io/2020/03/21/%E6%8A%80%E6%9C%AF%E7%9A%84%E6%9C%AC%E8%B4%A8/"/>
    <id>http://beichen1994.github.io/2020/03/21/%E6%8A%80%E6%9C%AF%E7%9A%84%E6%9C%AC%E8%B4%A8/</id>
    <published>2020-03-21T13:56:52.000Z</published>
    <updated>2020-04-26T00:51:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者：[美] 布莱恩.阿瑟</p><hr><ul><li><p>“技术的本性” technology-ness</p></li><li><p>技术，是新的技术产品和生产工艺通过被应用和被采用而获得改善，之后在获得进一步地应用和采用，进而创造出正反馈或者收益递增的效用。</p></li><li><p>技术呈现之初，那些看起来模模糊糊的状态</p></li><li><p>技术是由其他的技术构成的，技术产生于其他技术的组合。</p></li><li><p>技术是由部件和零件（集成件和次级集成件）构成的，而集成件自身也是技术。所以技术有一个递归性（recursive）地结构。</p></li><li><p>技术是什么，它是如何进化的？</p></li><li><p>技术（technology）、创新（innovation）、技艺（technique）内涵往往相互重叠，又相互矛盾。</p></li><li><p>首先需要界定属于，然后由此逻辑地导出结果和属性。</p></li></ul><a id="more"></a><p>Question: 作者是如何探究这个问题，以及如何构思的？</p><hr><h2 id="第一章-问题"><a class="markdownIt-Anchor" href="#第一章-问题"></a> 第一章 问题</h2><ul><li><p>是技术将我们与中世纪分离得，的确，是技术将我们与我们拥有了5万年甚至更久的那中共生活方式分开了。技术无可比拟的创造了我们的世界，它创造了我们的财富，我们的经济，还有我们的存在方式。</p></li><li><p>技术的循环：技术总是这样的循环，为解决老问题去采用新技术，新技术又引起新问题，新问题的解决又要诉诸更新的技术。我们的不安就来自于对这种循环会无休止地进行下去的恐惧。</p></li><li><p>我们会被两种巨大的、难以察觉的力量所左右：一个是我们人类寄托在技术上的深切的希望；另一个是我们对自然的最深切的信赖。这两种力量的斗争就如同漫长岁月中大陆板块之间那些无情的碰撞一样。</p></li><li><p>什么是技术？它的最深的本质是什么？它的特性和原理是什么？它从哪里来的？它是如何形成的？它又是如何发展的？它是如何进化的？</p></li></ul><h3 id="缺失了本质的技术"><a class="markdownIt-Anchor" href="#缺失了本质的技术"></a> 缺失了本质的技术</h3><ul><li><p>我们缺失的是一个关于技术的理论–一门关于技术的“学”。</p></li><li><p>关于技术的理论之所以缺失，是因为：技术一直处于科学的引用之中。那些认真思考技术的人大多数是社会学家和哲学家。</p></li></ul><p>Question: 科学的社会功能是什么？技术的本质是什么？</p><h3 id="技术的进化"><a class="markdownIt-Anchor" href="#技术的进化"></a> 技术的进化</h3><ul><li><p>“进化”的完整含义：某类事务的所有对象衍生于其以往对象的集合的过程，并且这一过程是依据类似“血统”这种纽带相关联的。</p></li><li><p>喷气机不是内燃机或任何其他先前技术的变种，它也不是在其“前任”技术基础上稳步积累形成的。所以解释这种“新颖性”(novelty)，即一种突发的、根本的新颖性，成了技术进化论者最主要的障碍。</p></li><li><p>但是当我们面对主要问题，如根本性的新技术是如何产生的，这相当于达尔文理论中的生物新物种是如何产生的问题，我们就遇到了阻碍，达尔文原理就不好用了。</p></li></ul><p>###　组合进化</p><ul><li><p>如果完整意义上的进化存在于技术中，那么所有的技术，包括新技术，一定是脱胎于之前存在的技术。也就是说，他们一定连接于、繁殖于某种之前的技术。换句话说，进化需要遗传机制–某种连接现在与过去的细致联系。</p></li><li><p>技术在某种程度上一定是来自此前已有技术的新的组合</p></li><li><p>如果新技术真是以前技术的组合,那么现存技术的储备一定在某种程度上提供了组合的成分</p></li><li><p>组合进化:之前的技术形式被作为现在原创技术的组分,当代的新技术成为构建更新的技术的可能的组分.反过来,其中的部分集数将继续编程那些尚未实现的新技术的可能的构建.慢慢的,最初很简单的技术发展出越来越多的技术性是,而很复杂的技术往往用很简单的技术作为其组分.所有技术的集合自力更生地从无到有,从简单到复杂地成长起来了.我们可以从自身创生了自身.这种机制便是组合进化(combinational evolution).</p></li><li><p>那么这些元初地技术(ur-technology)是从何而来的呢?由此我们将现如无穷的回溯之中.一定有超出组合之外地某些东西在继续创造新的技术.</p></li><li><p>技术的构建不仅来自已有技术的组合,还来自于对自然现象的捕捉和征服.</p></li><li><p>这里有个视角的变化,要从将技术看作是有固定目的的独立客体转换到将技术看作是可以无限构成新组合的客体.</p></li></ul><h2 id="第二章-组合与结构"><a class="markdownIt-Anchor" href="#第二章-组合与结构"></a> 第二章 组合与结构</h2><ul><li>技术的三个定义:</li></ul><ol><li><p>技术是实现人的目的的一种手段</p></li><li><p>技术是实践和元器件(components)的集成(assemblage)</p></li><li><p>技术是在某种文化中得以运用的装置和工程实践的集合</p></li></ol><ul><li><p>技术是实现目的的一种手段,它是一种装置,一种方法或一个流程</p></li><li><p>技术提供功能(functionality),功能指技术要执行的某一类任务</p></li><li><p>技术包含一系列操作,我们可以称之为技术的&quot;软件&quot;.这些操作需要物理设备去执行,我们可以称之为技术的&quot;硬件&quot;.实际上这两个方面都属于技术,但如果只强调一个方面,而忽视另一面,则会使他们看起来好像分属两个范畴,而这只是从不同侧面看待技术的结果.</p></li></ul><p>###　技术结构的形成</p><p>*　技术的最基本结构，包含一个用来执行基本功能的主机成和一套支持这一集成的次集成．</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：[美] 布莱恩.阿瑟&lt;/p&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;“技术的本性” technology-ness&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术，是新的技术产品和生产工艺通过被应用和被采用而获得改善，之后在获得进一步地应用和采用，进而创造出正反馈或者收益递增的效用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术呈现之初，那些看起来模模糊糊的状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术是由其他的技术构成的，技术产生于其他技术的组合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术是由部件和零件（集成件和次级集成件）构成的，而集成件自身也是技术。所以技术有一个递归性（recursive）地结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术是什么，它是如何进化的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术（technology）、创新（innovation）、技艺（technique）内涵往往相互重叠，又相互矛盾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先需要界定属于，然后由此逻辑地导出结果和属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="诗书" scheme="http://beichen1994.github.io/categories/%E8%AF%97%E4%B9%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Writing</title>
    <link href="http://beichen1994.github.io/2020/02/25/English-Writing/"/>
    <id>http://beichen1994.github.io/2020/02/25/English-Writing/</id>
    <published>2020-02-25T13:45:32.000Z</published>
    <updated>2020-03-22T08:37:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction-to-academic-writing-and-editing"><a class="markdownIt-Anchor" href="#introduction-to-academic-writing-and-editing"></a> Introduction to Academic Writing and Editing</h2><p>What to write, how to write, and how to edit to imporve your document</p><a id="more"></a><h2 id="to-become-a-good-writer"><a class="markdownIt-Anchor" href="#to-become-a-good-writer"></a> To become a good writer</h2><ul><li><p>Have something important to say.</p></li><li><p>Follow basic principles of English grammar in your writing.</p></li><li><p>Edit and revise. Edit and revise. Edit and revise…</p></li><li><p>Practice!</p></li></ul><h2 id="section-1-what-to-write"><a class="markdownIt-Anchor" href="#section-1-what-to-write"></a> Section 1: What to write</h2><ul><li><p>Planning what to write</p></li><li><p>The writing process</p></li><li><p>The components of an academic paper</p></li></ul><h2 id="section-2academic-style"><a class="markdownIt-Anchor" href="#section-2academic-style"></a> Section 2:Academic Style</h2><ul><li><p>Reference the work of others</p></li><li><p>Approaches for articles and proposals</p></li></ul><h2 id="section-3editing-for-correctness-clarity-and-conciseness"><a class="markdownIt-Anchor" href="#section-3editing-for-correctness-clarity-and-conciseness"></a> Section 3:Editing for Correctness, Clarity, and Conciseness</h2><ul><li><p>Grammar and punctuation principles</p></li><li><p>Writing in active voice</p></li><li><p>How to edit effectively</p></li><li><p>Writing clearly and concisely</p></li></ul><h2 id="section-4tools"><a class="markdownIt-Anchor" href="#section-4tools"></a> Section 4:Tools</h2><ul><li><p>Microsoft Word -Track Changes</p></li><li><p>Useful websites and resources</p></li><li><p>More examples and exercises to help you evaluate and improve your writing and editing.</p></li></ul><h2 id="the-key-to-good-academic-writing"><a class="markdownIt-Anchor" href="#the-key-to-good-academic-writing"></a> The key to good academic writing</h2><p>Have something to say, and say it clearly!</p><hr><h2 id="fact-1-paper-structure-结构"><a class="markdownIt-Anchor" href="#fact-1-paper-structure-结构"></a> Fact 1 Paper Structure 结构</h2><ul><li><p>题目</p></li><li><p>摘要</p></li><li><p>引言/文献总数</p></li><li><p>研究方法</p></li><li><p>结果/讨论</p></li><li><p>结论</p></li><li><p>参考文献</p></li></ul><h2 id="fact-2-review-process"><a class="markdownIt-Anchor" href="#fact-2-review-process"></a> Fact 2 Review Process</h2><ul><li><p>作者</p></li><li><p>Admin 管理员</p></li><li><p>EIC主编</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;introduction-to-academic-writing-and-editing&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction-to-academic-writing-and-editing&quot;&gt;&lt;/a&gt; Introduction to Academic Writing and Editing&lt;/h2&gt;&lt;p&gt;What to write, how to write, and how to edit to imporve your document&lt;/p&gt;
    
    </summary>
    
    
      <category term="科研" scheme="http://beichen1994.github.io/categories/%E7%A7%91%E7%A0%94/"/>
    
    
  </entry>
  
  <entry>
    <title>爬虫之代10代理</title>
    <link href="http://beichen1994.github.io/2020/02/08/%E7%88%AC%E8%99%AB%E4%B9%8B%E4%BB%A310%E4%BB%A3%E7%90%86/"/>
    <id>http://beichen1994.github.io/2020/02/08/%E7%88%AC%E8%99%AB%E4%B9%8B%E4%BB%A310%E4%BB%A3%E7%90%86/</id>
    <published>2020-02-08T14:55:00.000Z</published>
    <updated>2020-04-27T02:20:44.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h1><p>服务器检测的是某个IP单位时间的请求次数<br>代理即代理服务器(proxy server)<br>本机不是直接向web服务器发送请求，而是向代理服务器发送请求，再转发给服务器。并把服务器的响应转发给本机</p><a id="more"></a><h1 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h1><p>1.突破自身IP限制<br>2.访问一些单位或团体内部资源<br>3.提高访问速度，代理服务器会设置一个较大的硬盘缓冲区<br>4.隐藏真实IP</p><h1 id="代理分类"><a class="markdownIt-Anchor" href="#代理分类"></a> 代理分类</h1><h2 id="根据协议区分"><a class="markdownIt-Anchor" href="#根据协议区分"></a> 根据协议区分</h2><p>FTP代理服务器<br>HTTP.SSL/TLS.RTSP.Telnet.POP3/SMTP.SOCKET</p><h2 id="根据匿名程度区分"><a class="markdownIt-Anchor" href="#根据匿名程度区分"></a> 根据匿名程度区分</h2><p>高度匿名代理:数据包原封不动转发，服务器以为是普通客户端但其实为代理IP<br>普通匿名代理：数据包做改动，服务器端会发现代理IP，并会追查到真实IP<br>透明代理：数据包改动，且告诉服务器真实IP<br>间谍代理：用于记录用户传输的数据，进行研究，监控</p><h1 id="常见代理设置"><a class="markdownIt-Anchor" href="#常见代理设置"></a> 常见代理设置</h1><p>免费代理：可用代理不多，需要筛选，也可以维护一个代理池<br>付费代理<br>ADSL拨号：拨一次号换一次IP</p><h1 id="代理池"><a class="markdownIt-Anchor" href="#代理池"></a> 代理池</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">headers = &#123;&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&apos;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#从xicidaili首页获取一个代理ip</span><br><span class="line">def get_ip_list(url, headers):</span><br><span class="line">    #得到该页面的所有IP</span><br><span class="line">    html = requests.get(url, headers=headers)</span><br><span class="line">    html_text = html.text</span><br><span class="line">    #得到网页响应</span><br><span class="line">    soup = BeautifulSoup(html_text, &apos;lxml&apos;)</span><br><span class="line">    #解析网页</span><br><span class="line"></span><br><span class="line">    ips = soup.find_all(&apos;tr&apos;)</span><br><span class="line">    ip_list = []</span><br><span class="line"></span><br><span class="line">    for i in range(1, len(ips)):</span><br><span class="line">        ip_info = ips[i]</span><br><span class="line"></span><br><span class="line">        tds = ip_info.find_all(&apos;td&apos;)    #一个tr中的所有td</span><br><span class="line"></span><br><span class="line">        #httptype=str.lower(tds[5].text)  # HTTP/TTPS--&gt;http/https</span><br><span class="line">        #ip_list.append(httptype+&apos;://&apos;+tds[1].text + &apos;:&apos; + tds[2].text) #构造一个链接</span><br><span class="line"></span><br><span class="line">        ip_list.append(tds[1].text + &apos;:&apos; + tds[2].text) #得到ip:port</span><br><span class="line"></span><br><span class="line">    return ip_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#构建格式化的单个proxies</span><br><span class="line">def get_proxy(ip_port):</span><br><span class="line"></span><br><span class="line">    proxy_ip = &apos;http://&apos; + ip_port</span><br><span class="line">    proxy_ips = &apos;https://&apos; + ip_port</span><br><span class="line">    proxies = &#123;&apos;https&apos;: proxy_ips, &apos;http&apos;: proxy_ip&#125;</span><br><span class="line">    return proxies</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def verify_proxies(proxies):</span><br><span class="line">    http_url = &quot;https://www.mzitu.com/&quot;</span><br><span class="line">    try:</span><br><span class="line">        r=requests.get(http_url,proxies=proxies)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(&apos;invalid \n&apos;,e)</span><br><span class="line">        return False</span><br><span class="line">    else:</span><br><span class="line">        if r.status_code&gt;=200 and r.status_code&lt;=300:</span><br><span class="line">            print(&quot;&#123;0&#125;valid\n &quot;.format(proxies))</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;&#123;0&#125;invalid\n&quot;.format(proxies))</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    url = &apos;http://www.xicidaili.com/nn/&apos;</span><br><span class="line"></span><br><span class="line">    ip_list = get_ip_list(url, headers=headers)</span><br><span class="line">    valid_proxies_list=[]</span><br><span class="line"></span><br><span class="line">    for i in range(1,len(ip_list)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        proxies = get_proxy(ip_list[i])</span><br><span class="line"></span><br><span class="line">        verify = verify_proxies(proxies)</span><br><span class="line">        if verify == True:</span><br><span class="line">            valid_proxies_list.append(proxies)</span><br><span class="line">            with open(&apos;valid_proxies_list.json&apos;,&apos;w&apos;,encoding=&apos;utf-8&apos;) as file:</span><br><span class="line">                file.write(json.dumps(valid_proxies_list,indent=2,ensure_ascii=False))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本原理&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本原理&quot;&gt;&lt;/a&gt; 基本原理&lt;/h1&gt;&lt;p&gt;服务器检测的是某个IP单位时间的请求次数&lt;br&gt;
代理即代理服务器(proxy server)&lt;br&gt;
本机不是直接向web服务器发送请求，而是向代理服务器发送请求，再转发给服务器。并把服务器的响应转发给本机&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="爬虫" scheme="http://beichen1994.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>爬虫之9Ajax</title>
    <link href="http://beichen1994.github.io/2020/02/08/%E7%88%AC%E8%99%AB%E4%B9%8B9Ajax/"/>
    <id>http://beichen1994.github.io/2020/02/08/%E7%88%AC%E8%99%AB%E4%B9%8B9Ajax/</id>
    <published>2020-02-08T14:53:54.000Z</published>
    <updated>2020-04-27T02:20:40.070Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ajax-asynchronous-javascript-and-xml异步的javascript和xml"><a class="markdownIt-Anchor" href="#ajax-asynchronous-javascript-and-xml异步的javascript和xml"></a> Ajax (Asynchronous JavaScript and XML)（异步的JavaScript和XML）</h3><p>不是一门编程语言，而是利用JavaScript在保证页面不刷新，页面链接不改变情况下与服务器交换数据并更新部分网页的技术</p><a id="more"></a><p>原始HTML的某些数据通过Ajax加载，或JavaScript处理，得到了新的页面数据<br>在这个过程中，页面实际上是在后台与服务器进行了数据交换，获取数据后，利用JavaScript改变网页，这样网页内容就会更新。例如刷微博</p><h4 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h4><p>发送请求<br>解析内容<br>渲染网页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var xmlhttp;</span><br><span class="line"></span><br><span class="line">if(window.XMLHttpRequest)&#123;</span><br><span class="line">    xmlhttp = new XMLHttpRequest();             #新建XMLHttpRequest对象</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    xmlhttp = new ActiveObject(&apos;Microsoft.XMLHttp&apos;);</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.onreadystatechange = function()&#123;</span><br><span class="line">    #调用onreadystatechange属性进行监听，当服务器返回响应，对应的方法就会触发</span><br><span class="line">    if(xmlhttp.readyState==4&amp;&amp;xmlhttp.status==200)&#123;</span><br><span class="line">        documetn.getElementById(&apos;myDiv&apos;).innerHTML = xmlhttp.responseText;</span><br><span class="line">        #得到响应内容，将ID为myDiv的节点内部HTML进行替换</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;/ajax/&quot;,true);           </span><br><span class="line">xmlhttp.send()       #向服务器发送链接</span><br></pre></td></tr></table></figure><h4 id="ajax分析方法"><a class="markdownIt-Anchor" href="#ajax分析方法"></a> Ajax分析方法</h4><ol><li>查看请求</li></ol><p>F12开发者工具-</p><ul><li><p>Elements选项卡:<br>查看网页的源代码</p></li><li><p>Network选项卡:<br>页面加载过程中浏览器与服务器之间发送请求与接收响应的记录</p><p>xhr(XMLHttpRequest)类型</p></li><li><p>Headers选项卡:<br>Requests Headers: X-Requested-With:XMLHttpRequest</p></li><li><p>Preview选项卡:</p><p>可以看到响应内容，JSON格式</p></li><li><p>Response选项卡：</p><p>从中观察到真实的返回数据</p></li></ul><ol start="2"><li>过滤请求<br>筛选栏XHR,得到所有Ajax请求，随意点开一个条目，可以清楚看到其Request URL,Reuqest Headers,Response Headers,Response Body等</li></ol><h4 id="ajax结果提取"><a class="markdownIt-Anchor" href="#ajax结果提取"></a> Ajax结果提取</h4><ol><li>在Headers，分析请求链接，得到变化的参数</li><li>在Preview，观察响应内容</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ajax-asynchronous-javascript-and-xml异步的javascript和xml&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ajax-asynchronous-javascript-and-xml异步的javascript和xml&quot;&gt;&lt;/a&gt; Ajax (Asynchronous JavaScript and XML)（异步的JavaScript和XML）&lt;/h3&gt;&lt;p&gt;不是一门编程语言，而是利用JavaScript在保证页面不刷新，页面链接不改变情况下与服务器交换数据并更新部分网页的技术&lt;/p&gt;
    
    </summary>
    
    
      <category term="Computer" scheme="http://beichen1994.github.io/categories/Computer/"/>
    
    
      <category term="爬虫" scheme="http://beichen1994.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
